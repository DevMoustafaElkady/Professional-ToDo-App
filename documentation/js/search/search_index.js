var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddNewTaskComponent.html",[0,0.57,1,0.767]],["body/components/AddNewTaskComponent.html",[0,0.767,1,1.138,2,1.511,3,0.375,4,0.313,5,1.189,6,1.189,7,1.189,8,1.189,9,0.313,10,3.538,11,0.655,12,2.538,13,1.658,14,1.746,15,2.417,16,1.189,17,2.538,18,1.912,19,1.917,20,1.912,21,1.746,22,3.592,23,1.746,24,3.032,25,0.441,26,0.871,27,2.417,28,1.746,29,2.279,30,1.511,31,2.663,32,3.032,33,0.896,34,1.189,35,1.596,36,3.656,37,1.212,38,3.032,39,1.316,40,0.054,41,1.499,42,0.846,43,1.316,44,2.065,45,1.511,46,2.069,47,3.032,48,3.958,49,2.065,50,2.434,51,0.514,52,0.514,53,2.065,54,1.308,55,1.189,56,0.594,57,1.39,58,1.029,59,0.375,60,0.106,61,1.189,62,1.39,63,1.39,64,1.39,65,2.065,66,0.682,67,2.065,68,2.065,69,1.658,70,2.065,71,2.065,72,2.065,73,0.754,74,2.434,75,1.316,76,2.434,77,2.434,78,0.871,79,1.032,80,2.04,81,3.592,82,2.884,83,1.658,84,1.658,85,2.538,86,2.69,87,1.746,88,1.189,89,2.837,90,2.623,91,2.04,92,1.658,93,2.04,94,2.915,95,1.39,96,1.39,97,1.39,98,4.095,99,2.04,100,1.029,101,1.746,102,1.746,103,1.39,104,2.065,105,1.39,106,1.746,107,2.04,108,2.04,109,2.069,110,2.417,111,4.216,112,2.434,113,2.065,114,2.434,115,3.384,116,2.065,117,3.592,118,3.032,119,3.032,120,2.065,121,1.746,122,1.658,123,1.39,124,2.065,125,1.658,126,1.658,127,1.658,128,1.658,129,1.39,130,1.189,131,1.746,132,1.746,133,1.189,134,0.985,135,1.189,136,1.189,137,0.682,138,1.189,139,0.594,140,1.189,141,0.594,142,0.896,143,1.029,144,1.189,145,1.189,146,0.02,147,0.03,148,0.02]],["title/components/AppComponent.html",[0,0.57,137,0.882]],["body/components/AppComponent.html",[0,0.736,1,0.553,2,1.435,3,0.349,4,0.292,5,1.109,6,1.109,7,1.109,8,1.109,9,0.292,11,0.239,16,1.109,17,2.474,18,1.864,19,0.729,20,0.836,21,1.658,23,1.658,25,0.411,26,0.827,27,1.937,28,1.658,29,1.985,33,0.836,34,1.109,35,1.448,37,1.177,39,0.836,40,0.055,41,1.305,42,0.817,43,0.836,51,0.858,52,0.858,54,0.951,55,1.109,56,0.553,59,0.349,60,0.099,61,1.109,63,1.296,64,1.296,73,0.952,80,1.937,85,2.744,86,3.052,87,1.109,88,1.985,89,1.296,90,2.474,94,3.034,96,1.937,97,1.296,100,1.718,101,1.109,102,1.109,103,1.296,105,2.755,106,1.658,121,2.358,127,1.546,129,2.32,130,1.109,131,1.658,132,1.658,133,1.109,134,0.952,135,1.109,136,1.109,137,1.264,138,1.109,139,0.553,140,1.109,141,0.553,142,1.496,143,2.411,144,1.109,145,1.109,146,0.019,147,0.028,148,0.019,149,1.546,150,2.311,151,3.447,152,2.879,153,3.447,154,2.879,155,2.311,156,1.926,157,0.729,158,0.716,159,1.926,160,1.926,161,1.926,162,1.926,163,2.879,164,2.879,165,0.716,166,1.09,167,2.311,168,2.311,169,2.879,170,2.311,171,2.879,172,2.879,173,2.879,174,4.296,175,1.926,176,2.574,177,2.574,178,1.926,179,1.926,180,2.879,181,1.926,182,3.071,183,1.926,184,3.825,185,1.926,186,2.879,187,1.926,188,2.879,189,1.546,190,1.926,191,1.926,192,3.447,193,1.296,194,1.926,195,1.926,196,1.926,197,2.755,198,2.879,199,2.32,200,1.926,201,2.879,202,1.926,203,1.926,204,2.311,205,2.879,206,1.926,207,2.879,208,1.926,209,1.926,210,1.926,211,1.926,212,1.926,213,1.926,214,1.926,215,1.926,216,1.926,217,1.926,218,1.926,219,1.926,220,1.926,221,2.879,222,3.825,223,1.926,224,1.926,225,3.825,226,3.825,227,1.926,228,1.926,229,1.926,230,2.311,231,1.546,232,1.926,233,1.926,234,1.926,235,1.926,236,1.926,237,1.546,238,2.311,239,2.879,240,1.546,241,1.926,242,1.926]],["title/modules/AppModule.html",[243,1.797,244,1.538]],["body/modules/AppModule.html",[1,1.427,3,0.549,4,0.459,9,0.459,11,0.491,12,1.742,18,1.312,19,1.145,20,1.312,40,0.055,54,1.742,56,0.869,57,2.035,59,0.549,60,0.156,137,1.753,139,1.427,141,1.427,142,1.312,146,0.03,147,0.039,148,0.03,244,3.119,245,1.312,246,2.276,247,2.428,248,2.428,249,2.428,250,2.428,251,2.475,252,2.475,253,3.172,254,2.428,255,2.035,256,3.024,257,3.172,258,2.659,259,3.172,260,3.024,261,2.659,262,3.952,263,3.172,264,2.035,265,3.024,266,3.024,267,3.952,268,3.024,269,3.952,270,3.952,271,2.428,272,1.742,273,2.428,274,3.172,275,1.742,276,1.742,277,2.428,278,2.035,279,3.024]],["title/modules/AppRoutingModule.html",[243,1.797,251,1.331]],["body/modules/AppRoutingModule.html",[0,1.093,1,1.222,3,0.615,4,0.515,9,0.515,11,0.528,12,1.953,19,1.284,20,1.471,40,0.055,54,1.657,56,0.975,58,1.69,59,0.615,60,0.175,73,1.155,84,2.722,139,1.222,141,1.335,142,1.471,146,0.033,147,0.042,148,0.033,165,1.058,245,1.471,251,2.119,258,2.282,261,2.861,271,2.722,272,1.953,273,2.722,276,1.953,277,2.722,278,2.282,280,3.391,281,3.391,282,4.252,283,2.675,284,1.12,285,5.118,286,3.391,287,4.252,288,4.252,289,2.675,290,3.391,291,3.391,292,2.722,293,3.391,294,3.391]],["title/classes/DateRange.html",[60,0.138,295,1.159]],["body/classes/DateRange.html",[3,0.461,4,0.386,9,0.386,11,0.5,25,0.543,26,1.011,37,1.011,40,0.055,42,0.751,51,0.875,52,0.875,59,0.895,60,0.224,66,1.331,73,0.632,75,1.103,78,1.312,79,1.158,134,0.875,146,0.025,147,0.034,148,0.025,157,1.331,158,1.175,165,0.632,166,0.963,284,1.437,295,1.981,296,1.267,297,1.103,298,2.823,299,2.823,300,2.077,301,2.542,302,2.542,303,1.267,304,2.025,305,1.464,306,2.025,307,1.464,308,1.464,309,1.103,310,0.84,311,1.267,312,1.464,313,1.267,314,1.752,315,1.267,316,1.464,317,1.464,318,1.464,319,1.464,320,0.963,321,2.009,322,2.009,323,2.009,324,1.464,325,1.464,326,1.464,327,1.464,328,1.464,329,1.464,330,1.464,331,1.464,332,1.464,333,1.464,334,2.025,335,1.464,336,1.464,337,1.267,338,0.84,339,1.011,340,1.526,341,1.103,342,0.84,343,1.267,344,1.267,345,1.103,346,0.963,347,1.464,348,0.84,349,1.103,350,1.526,351,1.267,352,1.267,353,1.267]],["title/modules/MaterialsModule.html",[243,1.797,252,1.331]],["body/modules/MaterialsModule.html",[3,0.632,4,0.528,9,0.528,40,0.054,54,1.81,56,1,59,0.632,60,0.179,146,0.034,147,0.042,148,0.034,245,1.51,252,2.154,257,2.794,258,2.342,261,2.908,275,2.004,278,2.342,284,1.15,354,2.342,355,4.322,356,3.469,357,3.481,358,3.469,359,3.481,360,3.469,361,3.481,362,3.469,363,3.481,364,3.469,365,3.481,366,3.469,367,3.481,368,3.469,369,3.481,370,3.469,371,2.794,372,3.469,373,3.481,374,3.469,375,3.481,376,3.469,377,3.481,378,3.469,379,3.481,380,3.469,381,3.481,382,3.469,383,3.481,384,3.163]],["title/components/TaskDetailsComponent.html",[0,0.57,139,0.767]],["body/components/TaskDetailsComponent.html",[0,0.785,1,0.617,2,1.554,3,0.389,4,0.326,5,1.236,6,1.236,7,1.236,8,1.236,9,0.326,11,0.456,14,1.795,15,2.471,16,1.236,17,2.572,18,1.938,19,0.813,20,2.088,21,1.795,23,1.795,25,0.458,26,0.896,28,1.795,29,2.321,30,1.554,31,2.712,33,0.931,34,1.236,35,1.526,37,1.325,39,0.931,40,0.055,41,1.391,42,0.785,43,0.931,45,1.07,46,1.795,51,1.003,52,1.003,54,1.331,55,1.236,56,0.617,58,1.07,59,0.389,60,0.111,61,1.236,73,0.776,75,1.353,76,2.503,77,2.503,78,1.158,79,0.896,82,2.503,85,1.236,86,2.654,87,1.236,88,2.115,89,2.098,90,2.572,91,1.444,92,1.723,93,2.098,94,1.795,98,1.723,99,2.471,100,1.07,101,1.236,102,1.236,103,1.444,106,1.795,107,2.471,108,1.444,109,1.236,110,1.444,114,1.723,121,1.795,122,1.723,123,2.098,130,1.236,131,1.795,132,1.795,133,1.236,134,1.003,135,1.236,136,1.236,137,0.709,138,1.236,139,1.158,140,1.236,141,0.617,142,0.931,143,1.07,144,1.236,145,1.236,146,0.021,147,0.03,148,0.021,158,1.003,165,0.776,176,2.098,177,2.098,189,1.723,193,1.444,197,1.444,199,2.098,204,2.503,238,1.723,240,1.723,272,2.719,289,1.795,300,0.813,338,1.475,339,0.896,342,1.475,348,1.475,385,3.79,386,1.723,387,4.281,388,3.672,389,3.118,390,2.948,391,3.236,392,3.118,393,2.146,394,2.146,395,2.146,396,2.146,397,2.146,398,1.444,399,2.146,400,2.146,401,1.723,402,1.723,403,2.146,404,2.146,405,2.146,406,2.146,407,3.236,408,3.118,409,3.118,410,3.118,411,3.118,412,3.118,413,3.118,414,2.146,415,1.723,416,2.146,417,3.118,418,2.146,419,1.723,420,1.723,421,2.146,422,1.723,423,1.723,424,1.723,425,2.146,426,2.146,427,2.146,428,2.146,429,2.146,430,2.146,431,2.146]],["title/components/TasksListComponent.html",[0,0.57,141,0.767]],["body/components/TasksListComponent.html",[0,0.557,1,0.36,2,1.023,3,0.372,4,0.19,5,0.721,6,0.721,7,0.721,8,0.721,9,0.19,11,0.572,14,1.182,15,1.756,16,0.721,17,2.061,18,1.553,19,0.777,20,1.446,21,1.182,23,1.182,25,0.267,26,0.59,27,1.756,28,1.182,29,1.738,30,1.023,31,2.031,33,0.543,34,0.721,35,1.262,36,3.035,37,1.355,39,1.31,40,0.055,41,1.431,42,0.92,43,1.31,45,1.884,46,2.061,50,3.168,51,0.94,52,0.94,54,1.182,55,0.721,56,0.36,58,0.624,59,0.227,60,0.065,61,0.721,62,1.381,63,0.842,64,0.842,66,0.678,69,1.005,73,0.511,78,0.867,79,1.029,80,1.381,83,1.005,85,2.618,86,2.715,87,1.919,88,2.273,90,2.273,91,2.409,93,1.381,94,2.618,95,2.544,96,1.381,97,0.842,99,2.031,100,1.967,101,1.182,102,0.721,105,2.242,106,1.503,107,0.842,108,1.381,109,2.061,110,2.409,112,2.095,115,1.648,121,1.182,123,1.381,125,2.095,126,2.095,128,1.005,129,2.031,130,0.721,131,1.182,132,1.503,133,0.721,134,0.751,135,0.721,136,0.721,137,0.414,138,0.721,139,0.36,140,0.721,141,0.867,142,1.712,143,1.661,144,0.721,145,0.721,146,0.012,147,0.02,148,0.012,157,1.431,158,0.94,165,0.311,166,0.474,167,1.648,168,2.095,176,2.031,177,2.031,182,2.423,193,1.756,197,1.756,199,1.381,230,2.095,231,2.423,237,1.005,276,2.741,284,0.414,292,2.095,298,1.005,299,1.005,300,0.474,303,1.3,309,1.31,310,1.522,311,1.504,313,1.023,314,1.023,315,1.023,338,1.182,339,0.36,342,0.414,346,1.143,348,1.182,350,0.777,371,1.005,390,2.095,391,2.423,398,1.381,401,1.005,402,1.005,407,1.648,415,1.005,419,1.648,420,1.005,422,1.005,423,1.005,424,1.648,432,3.821,433,1.005,434,2.609,435,2.053,436,2.609,437,2.609,438,2.609,439,2.053,440,2.053,441,2.053,442,3.018,443,3.018,444,2.053,445,1.252,446,1.252,447,1.005,448,1.252,449,1.252,450,1.252,451,1.252,452,1.252,453,2.609,454,1.252,455,1.252,456,1.252,457,1.252,458,1.252,459,1.252,460,1.252,461,1.252,462,1.252,463,1.252,464,1.252,465,1.252,466,1.252,467,2.053,468,2.053,469,4.086,470,1.252,471,3.946,472,1.252,473,1.252,474,1.252,475,1.756,476,1.252,477,1.252,478,1.252,479,1.252,480,2.053,481,2.095,482,1.252,483,2.053,484,1.252,485,1.252,486,1.252,487,1.252,488,2.609,489,1.252,490,1.252,491,1.252,492,1.252,493,2.053,494,1.252,495,1.252,496,2.053,497,1.252,498,1.252,499,1.252,500,2.053,501,1.252,502,1.252,503,1.252,504,1.252,505,1.252,506,2.053,507,2.053,508,2.053,509,1.252,510,2.609,511,1.252,512,1.005,513,1.252,514,1.252,515,2.053,516,1.252,517,2.053,518,3.018,519,1.252,520,1.252,521,1.252,522,1.252,523,1.252,524,1.252,525,1.252,526,1.252,527,1.252,528,1.252,529,1.252,530,1.252,531,1.252,532,2.053,533,1.252,534,1.252,535,1.252,536,1.252,537,1.252,538,2.609,539,2.053,540,1.252,541,1.252,542,1.252,543,1.252,544,1.252,545,1.252,546,1.252,547,1.252,548,1.252,549,1.252,550,1.252,551,1.252,552,2.053,553,1.252,554,1.252,555,3.58,556,2.053,557,1.252,558,1.252,559,1.252]],["title/classes/Todo.html",[60,0.138,158,0.664]],["body/classes/Todo.html",[3,0.421,4,0.352,9,0.352,11,0.476,25,0.495,26,0.947,37,1.355,40,0.055,42,1.008,51,1.173,52,1.173,59,0.875,60,0.215,66,1.267,73,0.954,74,2.646,75,1.664,78,1.318,79,1.268,134,0.82,146,0.023,147,0.032,148,0.023,157,1.581,158,1.173,165,0.577,166,0.878,284,1.379,295,1.812,296,1.155,297,1.006,300,2.085,303,1.911,304,1.898,305,1.335,306,1.898,307,1.335,308,1.335,309,1.006,310,0.766,311,1.155,312,1.335,313,1.911,314,2.081,315,1.911,316,1.335,317,1.335,318,1.335,319,1.335,320,0.878,321,1.911,322,1.911,323,1.911,324,1.335,325,1.335,326,1.335,327,1.335,328,1.335,329,1.335,330,1.335,331,1.335,332,1.335,333,1.335,334,1.898,335,1.335,336,1.335,337,1.155,338,0.766,339,0.947,340,1.43,341,1.006,342,0.766,343,1.155,344,1.155,345,1.006,346,0.878,347,1.335,348,0.766,349,1.006,350,1.452,351,1.155,352,1.155,353,1.155,560,2.318,561,2.318,562,2.318,563,2.318,564,2.318,565,2.318,566,2.318]],["title/classes/TodoFilter.html",[60,0.138,310,0.882]],["body/classes/TodoFilter.html",[3,0.422,4,0.353,9,0.353,11,0.519,25,0.497,26,0.95,37,1.357,40,0.055,42,1.009,51,1.175,52,1.175,59,0.875,60,0.216,66,1.27,73,0.579,75,1.01,78,1.319,79,1.27,134,0.822,146,0.023,147,0.032,148,0.023,157,1.584,158,1.142,165,0.579,166,0.881,284,1.382,295,2.094,296,1.16,297,1.01,300,2.079,303,1.647,304,1.903,305,1.34,306,1.903,307,1.34,308,1.34,309,1.01,310,1.092,311,1.915,312,1.34,313,1.915,314,2.085,315,1.915,316,1.34,317,1.34,318,1.34,319,1.34,320,0.881,321,1.915,322,1.915,323,1.915,324,1.34,325,1.34,326,1.34,327,1.34,328,1.34,329,1.34,330,1.34,331,1.34,332,1.34,333,1.34,334,1.903,335,1.34,336,1.34,337,1.16,338,0.769,339,0.95,340,1.434,341,1.01,342,0.769,343,1.16,344,1.16,345,1.01,346,0.881,347,1.34,348,0.769,349,1.01,350,1.455,351,1.16,352,1.16,353,1.16,481,2.653,567,2.327,568,2.327,569,2.327,570,2.327,571,2.327,572,2.327,573,2.327]],["title/classes/TodoGrouped.html",[60,0.138,320,1.011]],["body/classes/TodoGrouped.html",[3,0.434,4,0.363,9,0.363,11,0.484,25,0.511,26,0.969,30,1.68,33,1.038,37,1.283,39,1.462,40,0.055,41,1.276,42,0.954,43,1.462,45,1.193,51,0.971,52,0.971,59,0.882,60,0.218,66,1.289,73,0.595,75,1.038,78,1.121,79,1.121,134,0.838,146,0.023,147,0.033,148,0.023,157,1.276,158,1.29,165,0.595,166,0.906,284,1.399,289,1.941,295,1.838,296,1.193,297,1.038,300,2.056,303,1.945,304,1.941,305,1.378,306,1.941,307,1.378,308,1.378,309,1.038,310,0.79,311,1.193,312,1.378,313,1.193,314,1.68,315,1.193,316,1.378,317,1.378,318,1.378,319,1.378,320,1.276,321,2.225,322,2.225,323,2.225,324,1.378,325,1.378,326,1.378,327,1.378,328,1.378,329,1.378,330,1.378,331,1.378,332,1.378,333,1.378,334,2.439,335,1.378,336,1.378,337,1.193,338,0.79,339,0.969,340,1.462,341,1.038,342,0.79,343,1.193,344,1.193,345,1.038,346,0.906,347,1.378,348,0.79,349,1.038,350,1.477,351,1.193,352,1.193,353,1.193,574,3.37,575,2.393,576,3.37,577,1.921,578,2.393,579,2.393,580,2.393,581,2.393]],["title/injectables/TodoService.html",[35,1.011,582,1.538]],["body/injectables/TodoService.html",[3,0.326,4,0.273,9,0.273,11,0.57,25,0.384,26,0.786,30,1.362,33,0.78,35,1.035,37,1.431,39,1.992,40,0.055,41,1.914,42,1,43,1.992,45,2.288,46,2.41,51,0.919,52,0.919,54,1.22,56,0.517,59,0.326,60,0.093,62,2.674,66,1.313,73,0.447,78,0.517,79,1.062,95,1.21,134,0.447,143,0.896,146,0.018,147,0.027,148,0.018,150,1.443,157,1.585,158,1.115,165,0.68,170,1.443,274,3.36,275,1.035,284,0.903,289,2.505,300,0.681,309,1.435,310,1.383,320,1.585,337,1.362,339,1.062,340,1.186,345,0.78,346,1.647,349,1.945,398,1.21,447,1.443,475,2.674,512,2.194,577,1.443,582,1.574,583,1.798,584,1.443,585,4.185,586,3.307,587,3.307,588,3.307,589,2.733,590,2.733,591,2.733,592,3.695,593,2.733,594,2.733,595,2.733,596,2.733,597,1.798,598,2.733,599,1.798,600,1.798,601,1.798,602,3.695,603,1.798,604,1.798,605,1.798,606,1.798,607,1.798,608,2.733,609,1.798,610,1.798,611,1.798,612,1.798,613,1.798,614,1.798,615,1.798,616,2.733,617,1.798,618,2.733,619,2.733,620,2.733,621,1.798,622,3.307,623,2.733,624,1.798,625,1.798,626,1.798,627,1.798,628,1.798,629,1.443,630,1.798,631,1.798,632,1.798,633,1.798,634,1.798,635,1.798,636,1.798,637,2.733,638,1.798,639,2.194,640,3.307,641,1.798,642,1.798,643,3.307,644,3.307,645,2.733,646,1.798,647,1.798,648,1.798,649,1.798,650,1.798,651,1.798,652,2.733,653,1.798,654,1.798,655,1.798,656,1.798,657,1.798,658,1.798,659,2.733,660,1.798,661,1.798,662,2.733,663,1.798,664,1.798,665,1.798,666,1.798,667,2.733,668,1.798,669,1.798,670,1.798,671,1.798,672,1.798,673,1.798,674,1.798,675,1.798,676,1.798,677,1.798,678,1.798,679,1.798,680,1.798,681,1.798,682,2.733,683,2.733,684,1.798,685,1.798,686,1.798,687,3.307,688,1.798,689,1.798,690,1.798,691,1.798,692,1.798,693,2.733,694,1.798,695,1.798,696,1.798,697,1.798,698,1.798,699,1.798,700,1.798,701,1.798,702,1.798,703,1.798,704,1.798,705,1.798,706,1.798,707,1.798,708,1.798]],["title/coverage.html",[709,2.919]],["body/coverage.html",[0,1.028,1,0.943,9,0.498,10,2.633,11,0.568,12,1.889,13,2.633,35,1.242,40,0.054,42,0.701,60,0.248,100,2.728,137,1.084,139,0.943,141,0.943,146,0.032,147,0.041,148,0.032,149,2.633,158,0.816,272,1.889,276,1.889,295,1.423,297,2.264,310,1.084,320,1.242,338,1.084,342,1.084,348,1.084,350,1.242,354,2.207,384,2.207,385,2.633,386,2.633,432,2.633,433,2.633,582,1.889,584,2.633,709,2.633,710,3.28,711,3.28,712,3.28,713,4.574,714,5.267,715,5.267,716,3.28,717,4.574,718,3.28,719,3.28,720,2.633,721,3.342,722,2.633,723,3.342,724,2.633,725,2.633,726,3.28,727,3.28]],["title/dependencies.html",[246,1.848,728,1.793]],["body/dependencies.html",[40,0.054,56,1.092,57,2.556,58,1.893,146,0.037,147,0.045,148,0.037,246,2.187,259,3.049,263,3.659,264,3.067,275,2.187,629,3.049,729,3.798,730,5.363,731,3.798,732,3.659,733,3.798,734,3.798,735,3.798,736,3.798,737,3.798,738,3.798,739,3.798,740,3.798,741,3.798,742,3.798,743,3.798,744,3.798,745,3.798,746,3.798,747,3.798]],["title/index.html",[25,0.477,748,2.234,749,2.234]],["body/index.html",[0,0.998,4,0.521,11,0.426,14,1.976,18,1.489,19,1.299,40,0.042,41,1.299,109,2.999,146,0.034,147,0.042,148,0.034,255,2.309,639,2.755,728,2.755,732,2.755,750,4.284,751,3.432,752,4.67,753,4.67,754,3.432,755,3.432,756,4.284,757,5.034,758,3.432,759,3.432,760,3.432,761,3.432,762,3.432,763,3.432,764,3.432,765,3.432,766,3.432,767,3.432,768,4.67,769,4.67,770,3.432,771,4.891,772,3.432,773,3.432,774,3.432,775,3.432,776,4.284,777,4.284,778,4.891,779,3.432,780,4.284,781,4.284,782,3.432,783,5.133,784,3.432,785,3.432,786,3.432,787,4.284,788,3.432,789,3.432,790,3.432,791,3.432,792,3.432,793,4.67,794,3.432,795,3.432,796,3.432,797,2.309,798,3.432,799,3.432]],["title/modules.html",[245,1.578]],["body/modules.html",[40,0.047,146,0.041,147,0.047,148,0.041,244,2.401,245,1.809,251,2.078,252,2.078,264,2.806,800,4.169,801,4.169,802,5.078,803,4.815,804,4.815]],["title/overview.html",[797,2.447]],["body/overview.html",[1,1.389,2,1.848,40,0.053,137,1.748,139,1.389,141,1.389,146,0.036,147,0.044,148,0.036,244,3.168,245,1.609,246,2.587,247,2.976,248,2.976,249,2.976,250,2.976,251,2.409,252,2.409,253,3.606,254,2.976,255,2.495,283,2.135,296,1.848,339,1.066,341,1.609,582,2.135,797,2.495,805,4.492,806,3.708]],["title/routes.html",[283,2.094]],["body/routes.html",[40,0.048,146,0.042,147,0.048,148,0.042,283,2.48]],["title/miscellaneous/variables.html",[807,1.793,808,2.576]],["body/miscellaneous/variables.html",[11,0.497,25,0.659,40,0.055,42,1.086,51,1.282,52,1.282,66,1.322,78,0.886,79,1.15,134,0.996,146,0.03,147,0.039,148,0.03,155,2.476,165,0.767,166,1.168,297,1.338,321,1.995,322,1.995,323,1.995,338,1.322,339,1.15,340,1.737,341,1.338,342,1.322,343,1.537,344,1.537,345,1.338,346,1.168,348,1.322,349,1.338,350,1.781,351,1.537,352,1.537,353,1.537,354,2.076,356,2.476,358,2.476,360,2.476,362,2.476,364,2.476,366,2.476,368,2.476,370,2.476,372,2.476,374,2.476,376,2.476,378,2.476,380,2.476,382,2.476,384,2.693,475,2.693,720,2.476,721,3.775,722,2.476,723,2.476,724,3.213,725,3.213,807,2.476,808,2.476,809,4.002,810,3.084,811,3.084,812,4.702,813,3.084,814,3.084,815,3.084,816,3.084,817,4.002,818,4.002]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/DateRange.html":{},"modules/MaterialsModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":100,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"coverage.html":{}}}],["0.03",{"_index":559,"title":{},"body":{"components/TasksListComponent.html":{}}}],["0.11.4",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":531,"title":{},"body":{"components/TasksListComponent.html":{}}}],["0.2s",{"_index":421,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["0.3s",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["0.4s",{"_index":427,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["0.5em",{"_index":532,"title":{},"body":{"components/TasksListComponent.html":{}}}],["0.9.0",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["00656a",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["0a6a3c",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["0px",{"_index":523,"title":{},"body":{"components/TasksListComponent.html":{}}}],["1",{"_index":339,"title":{},"body":{"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":97,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["100vh",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":105,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["12.2.0",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["12.2.1",{"_index":732,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["12px",{"_index":517,"title":{},"body":{"components/TasksListComponent.html":{}}}],["13px",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["14px",{"_index":524,"title":{},"body":{"components/TasksListComponent.html":{}}}],["15px",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["16px",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["17px",{"_index":417,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["180",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["183c5b",{"_index":513,"title":{},"body":{"components/TasksListComponent.html":{}}}],["1px",{"_index":422,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["2",{"_index":340,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":99,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["21px",{"_index":522,"title":{},"body":{"components/TasksListComponent.html":{}}}],["220px",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["22px",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["23px",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["24px",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["25px",{"_index":552,"title":{},"body":{"components/TasksListComponent.html":{}}}],["27px",{"_index":519,"title":{},"body":{"components/TasksListComponent.html":{}}}],["28px",{"_index":544,"title":{},"body":{"components/TasksListComponent.html":{}}}],["2d2d2d",{"_index":127,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{}}}],["3",{"_index":341,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["30px",{"_index":89,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["360deg",{"_index":431,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["3px",{"_index":424,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["4",{"_index":805,"title":{},"body":{"overview.html":{}}}],["40px",{"_index":415,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["45px",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["4d708e",{"_index":121,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["4e534d",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":806,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["5.15.4",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["5px",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["6.6.0",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["629bb6",{"_index":549,"title":{},"body":{"components/TasksListComponent.html":{}}}],["646464",{"_index":554,"title":{},"body":{"components/TasksListComponent.html":{}}}],["678cab",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["6d6d6d",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["6px",{"_index":416,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["72e097",{"_index":125,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TasksListComponent.html":{}}}],["787878",{"_index":107,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["7px",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["8px",{"_index":516,"title":{},"body":{"components/TasksListComponent.html":{}}}],["97b92f",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["_todos",{"_index":586,"title":{},"body":{"injectables/TodoService.html":{}}}],["a22e45",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["absolute",{"_index":515,"title":{},"body":{"components/TasksListComponent.html":{}}}],["accent",{"_index":112,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TasksListComponent.html":{}}}],["accent.mat",{"_index":118,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["accent:active",{"_index":120,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["accessors",{"_index":596,"title":{},"body":{"injectables/TodoService.html":{}}}],["accordion",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedroute",{"_index":391,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["activesidelink",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_component",{"_index":145,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["add",{"_index":19,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"index.html":{}}}],["adding",{"_index":675,"title":{},"body":{"injectables/TodoService.html":{}}}],["addnew",{"_index":512,"title":{},"body":{"components/TasksListComponent.html":{},"injectables/TodoService.html":{}}}],["addnew(data",{"_index":599,"title":{},"body":{"injectables/TodoService.html":{}}}],["addnew(data:todo",{"_index":676,"title":{},"body":{"injectables/TodoService.html":{}}}],["addnewcomponent",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["addnewtaskcomponent",{"_index":1,"title":{"components/AddNewTaskComponent.html":{}},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addnewup",{"_index":509,"title":{},"body":{"components/TasksListComponent.html":{}}}],["addtask",{"_index":84,"title":{},"body":{"components/AddNewTaskComponent.html":{},"modules/AppRoutingModule.html":{}}}],["align",{"_index":543,"title":{},"body":{"components/TasksListComponent.html":{}}}],["alldata.filter((el:todo",{"_index":693,"title":{},"body":{"injectables/TodoService.html":{}}}],["alldata.map((el:todo",{"_index":684,"title":{},"body":{"injectables/TodoService.html":{}}}],["alldata:todo",{"_index":682,"title":{},"body":{"injectables/TodoService.html":{}}}],["angular",{"_index":752,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialsModule.html":{},"injectables/TodoService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":56,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialsModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"injectables/TodoService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":57,"title":{},"body":{"components/AddNewTaskComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":357,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["angular/material/card",{"_index":381,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["angular/material/checkbox",{"_index":371,"title":{},"body":{"modules/MaterialsModule.html":{},"components/TasksListComponent.html":{}}}],["angular/material/core",{"_index":375,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["angular/material/datepicker",{"_index":373,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["angular/material/divider",{"_index":359,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["angular/material/expansion",{"_index":383,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["angular/material/icon",{"_index":361,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["angular/material/input",{"_index":377,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["angular/material/list",{"_index":367,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["angular/material/radio",{"_index":379,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["angular/material/select",{"_index":369,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["angular/material/sidenav",{"_index":363,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["angular/material/toolbar",{"_index":365,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["angular/platform",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":58,"title":{},"body":{"components/AddNewTaskComponent.html":{},"modules/AppRoutingModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"dependencies.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"index.html":{}}}],["app.component",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":137,"title":{"components/AppComponent.html":{}},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":533,"title":{},"body":{"components/TasksListComponent.html":{}}}],["appmodule",{"_index":244,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":251,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":631,"title":{},"body":{"injectables/TodoService.html":{}}}],["artifacts",{"_index":772,"title":{},"body":{"index.html":{}}}],["async",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["automatically",{"_index":762,"title":{},"body":{"index.html":{}}}],["available",{"_index":804,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["avatarname",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["back",{"_index":82,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["backbutton",{"_index":426,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["background",{"_index":85,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["behaviorsubject",{"_index":622,"title":{},"body":{"injectables/TodoService.html":{}}}],["behaviorsubject(new",{"_index":616,"title":{},"body":{"injectables/TodoService.html":{}}}],["block",{"_index":102,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["boolean",{"_index":314,"title":{},"body":{"classes/DateRange.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["bootstrap",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":123,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["bottom",{"_index":93,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["box",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":802,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":771,"title":{},"body":{"index.html":{}}}],["button",{"_index":108,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["button.mat",{"_index":111,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["button:hover",{"_index":428,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["buttonstree",{"_index":124,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["capabilities",{"_index":791,"title":{},"body":{"index.html":{}}}],["card",{"_index":418,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["catch",{"_index":70,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["change",{"_index":764,"title":{},"body":{"index.html":{}}}],["check",{"_index":796,"title":{},"body":{"index.html":{}}}],["checkbox",{"_index":555,"title":{},"body":{"components/TasksListComponent.html":{}}}],["checked",{"_index":119,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["checked.mat",{"_index":556,"title":{},"body":{"components/TasksListComponent.html":{}}}],["checkfileld",{"_index":439,"title":{},"body":{"components/TasksListComponent.html":{}}}],["checkfileld(obj",{"_index":445,"title":{},"body":{"components/TasksListComponent.html":{}}}],["checkfileld(obj:any,val:string",{"_index":502,"title":{},"body":{"components/TasksListComponent.html":{}}}],["checkitem",{"_index":436,"title":{},"body":{"components/TasksListComponent.html":{}}}],["choice",{"_index":786,"title":{},"body":{"index.html":{}}}],["circle",{"_index":114,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["class",{"_index":60,"title":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/DateRange.html":{},"modules/MaterialsModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["classes",{"_index":296,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"overview.html":{}}}],["clear",{"_index":81,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["cli",{"_index":753,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":766,"title":{},"body":{"index.html":{}}}],["color",{"_index":86,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["command",{"_index":787,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":355,"title":{},"body":{"modules/MaterialsModule.html":{}}}],["completeditem",{"_index":537,"title":{},"body":{"components/TasksListComponent.html":{}}}],["component",{"_index":0,"title":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":135,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"overview.html":{}}}],["console.log('date",{"_index":641,"title":{},"body":{"injectables/TodoService.html":{}}}],["console.log('filter",{"_index":647,"title":{},"body":{"injectables/TodoService.html":{}}}],["console.log('item',this.item",{"_index":406,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["console.log('this.selecteditems",{"_index":498,"title":{},"body":{"components/TasksListComponent.html":{}}}],["console.log('this.todofilter',this.todofilter",{"_index":504,"title":{},"body":{"components/TasksListComponent.html":{}}}],["console.log(error",{"_index":72,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["console.log(res",{"_index":490,"title":{},"body":{"components/TasksListComponent.html":{}}}],["const",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/DateRange.html":{},"modules/MaterialsModule.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["constructor(data",{"_index":575,"title":{},"body":{"classes/TodoGrouped.html":{}}}],["constructor(data?:todo",{"_index":324,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["constructor(datepipe",{"_index":597,"title":{},"body":{"injectables/TodoService.html":{}}}],["constructor(private",{"_index":636,"title":{},"body":{"injectables/TodoService.html":{}}}],["constructor(public",{"_index":61,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["constructor(todoser",{"_index":34,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["content",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["context",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlbuttons",{"_index":542,"title":{},"body":{"components/TasksListComponent.html":{}}}],["controls",{"_index":551,"title":{},"body":{"components/TasksListComponent.html":{}}}],["coverage",{"_index":709,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cursor",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["d",{"_index":700,"title":{},"body":{"injectables/TodoService.html":{}}}],["d.getdate",{"_index":705,"title":{},"body":{"injectables/TodoService.html":{}}}],["d.getfullyear",{"_index":707,"title":{},"body":{"injectables/TodoService.html":{}}}],["d.getmonth",{"_index":703,"title":{},"body":{"injectables/TodoService.html":{}}}],["d0e4e0",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TaskDetailsComponent.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["data.filter((el:todo",{"_index":336,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["data.length",{"_index":326,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["data.map((elx:todo",{"_index":685,"title":{},"body":{"injectables/TodoService.html":{}}}],["date",{"_index":78,"title":{},"body":{"components/AddNewTaskComponent.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["date(date",{"_index":701,"title":{},"body":{"injectables/TodoService.html":{}}}],["date(el.date).gettime",{"_index":656,"title":{},"body":{"injectables/TodoService.html":{}}}],["date(today.getfullyear",{"_index":351,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"miscellaneous/variables.html":{}}}],["date:date",{"_index":306,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["datepipe",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"injectables/TodoService.html":{}}}],["daterange",{"_index":295,"title":{"classes/DateRange.html":{}},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"coverage.html":{}}}],["day",{"_index":704,"title":{},"body":{"injectables/TodoService.html":{}}}],["dd",{"_index":645,"title":{},"body":{"injectables/TodoService.html":{}}}],["dd'):true",{"_index":666,"title":{},"body":{"injectables/TodoService.html":{}}}],["ddd",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["declarations",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialsModule.html":{}}}],["decoration",{"_index":539,"title":{},"body":{"components/TasksListComponent.html":{}}}],["deep",{"_index":110,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["default",{"_index":51,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["del",{"_index":553,"title":{},"body":{"components/TasksListComponent.html":{}}}],["delete",{"_index":506,"title":{},"body":{"components/TasksListComponent.html":{}}}],["deleted",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["deleteditem",{"_index":541,"title":{},"body":{"components/TasksListComponent.html":{}}}],["deleteselected",{"_index":545,"title":{},"body":{"components/TasksListComponent.html":{}}}],["dependencies",{"_index":246,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":74,"title":{},"body":{"components/AddNewTaskComponent.html":{},"classes/Todo.html":{}}}],["description:string",{"_index":305,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["details",{"_index":387,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details'},{'name",{"_index":140,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["details.component",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["details.component.html",{"_index":389,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.scss",{"_index":388,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts",{"_index":386,"title":{},"body":{"components/TaskDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:12",{"_index":396,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:13",{"_index":395,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:14",{"_index":394,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":392,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:16",{"_index":397,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":393,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["details/task",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TaskDetailsComponent.html":{},"coverage.html":{}}}],["dev",{"_index":759,"title":{},"body":{"index.html":{}}}],["development",{"_index":755,"title":{},"body":{"index.html":{}}}],["directive",{"_index":133,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["directives",{"_index":144,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":770,"title":{},"body":{"index.html":{}}}],["directory",{"_index":775,"title":{},"body":{"index.html":{}}}],["disabledbutton",{"_index":128,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TasksListComponent.html":{}}}],["discription",{"_index":408,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["display",{"_index":101,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["dist",{"_index":774,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["done",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["doneselected",{"_index":546,"title":{},"body":{"components/TasksListComponent.html":{}}}],["dynamic",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":455,"title":{},"body":{"components/TasksListComponent.html":{}}}],["e0e0e0",{"_index":526,"title":{},"body":{"components/TasksListComponent.html":{}}}],["e2e",{"_index":784,"title":{},"body":{"index.html":{}}}],["editval",{"_index":589,"title":{},"body":{"injectables/TodoService.html":{}}}],["editval(obj",{"_index":601,"title":{},"body":{"injectables/TodoService.html":{}}}],["editval(obj:any",{"_index":696,"title":{},"body":{"injectables/TodoService.html":{}}}],["el.group",{"_index":337,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["el.iscompleted",{"_index":661,"title":{},"body":{"injectables/TodoService.html":{}}}],["el.isdeleted",{"_index":659,"title":{},"body":{"injectables/TodoService.html":{}}}],["el.title",{"_index":687,"title":{},"body":{"injectables/TodoService.html":{}}}],["el.title.tolocalelowercase().indexof(filterobj.search.tolocalelowercase",{"_index":651,"title":{},"body":{"injectables/TodoService.html":{}}}],["element",{"_index":132,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["element:not(.mat",{"_index":116,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["elkady",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["elx.title",{"_index":686,"title":{},"body":{"injectables/TodoService.html":{}}}],["end",{"_index":783,"title":{},"body":{"index.html":{}}}],["enums",{"_index":347,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["environment",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":71,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["execute",{"_index":780,"title":{},"body":{"index.html":{}}}],["expansion",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["export",{"_index":59,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/DateRange.html":{},"modules/MaterialsModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["exports",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialsModule.html":{}}}],["f1f1f1",{"_index":514,"title":{},"body":{"components/TasksListComponent.html":{}}}],["f1fdff",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["f36523",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["fdb522",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["ff9c9c",{"_index":126,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TasksListComponent.html":{}}}],["fff",{"_index":87,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["field",{"_index":95,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TasksListComponent.html":{},"injectables/TodoService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/DateRange.html":{},"modules/MaterialsModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["files",{"_index":765,"title":{},"body":{"index.html":{}}}],["fill",{"_index":534,"title":{},"body":{"components/TasksListComponent.html":{}}}],["filter",{"_index":309,"title":{},"body":{"classes/DateRange.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["filterdata",{"_index":574,"title":{},"body":{"classes/TodoGrouped.html":{}}}],["filterdata(data",{"_index":580,"title":{},"body":{"classes/TodoGrouped.html":{}}}],["filterdata(data:todo",{"_index":333,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["filtereditems",{"_index":648,"title":{},"body":{"injectables/TodoService.html":{}}}],["filterform",{"_index":525,"title":{},"body":{"components/TasksListComponent.html":{}}}],["filterobj",{"_index":608,"title":{},"body":{"injectables/TodoService.html":{}}}],["filterobj.date",{"_index":663,"title":{},"body":{"injectables/TodoService.html":{}}}],["filterobj.daterange",{"_index":653,"title":{},"body":{"injectables/TodoService.html":{}}}],["filterobj.daterange.firstdate",{"_index":654,"title":{},"body":{"injectables/TodoService.html":{}}}],["filterobj.daterange.firstdate.gettime",{"_index":657,"title":{},"body":{"injectables/TodoService.html":{}}}],["filterobj.daterange.lastdate",{"_index":655,"title":{},"body":{"injectables/TodoService.html":{}}}],["filterobj.group",{"_index":652,"title":{},"body":{"injectables/TodoService.html":{}}}],["filterobj.groupid",{"_index":662,"title":{},"body":{"injectables/TodoService.html":{}}}],["filterobj.iscompleted",{"_index":660,"title":{},"body":{"injectables/TodoService.html":{}}}],["filterobj.isdeleted",{"_index":658,"title":{},"body":{"injectables/TodoService.html":{}}}],["filterobj.search",{"_index":650,"title":{},"body":{"injectables/TodoService.html":{}}}],["filtersection",{"_index":520,"title":{},"body":{"components/TasksListComponent.html":{}}}],["find",{"_index":691,"title":{},"body":{"injectables/TodoService.html":{}}}],["findbyname",{"_index":590,"title":{},"body":{"injectables/TodoService.html":{}}}],["findbyname(name",{"_index":604,"title":{},"body":{"injectables/TodoService.html":{}}}],["findbyname(name:any",{"_index":692,"title":{},"body":{"injectables/TodoService.html":{}}}],["first",{"_index":789,"title":{},"body":{"index.html":{}}}],["firstdate",{"_index":298,"title":{},"body":{"classes/DateRange.html":{},"components/TasksListComponent.html":{}}}],["firstdate:date",{"_index":317,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["firstgroup",{"_index":547,"title":{},"body":{"components/TasksListComponent.html":{}}}],["flex",{"_index":530,"title":{},"body":{"components/TasksListComponent.html":{}}}],["font",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["fontawesome",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":50,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TasksListComponent.html":{}}}],["formatdate(date",{"_index":699,"title":{},"body":{"injectables/TodoService.html":{}}}],["formsmodule",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/angular",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["found",{"_index":413,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["free",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":792,"title":{},"body":{"index.html":{}}}],["generate",{"_index":768,"title":{},"body":{"index.html":{}}}],["generated",{"_index":751,"title":{},"body":{"index.html":{}}}],["getalltodos",{"_index":591,"title":{},"body":{"injectables/TodoService.html":{}}}],["getalltodos(filterobj",{"_index":606,"title":{},"body":{"injectables/TodoService.html":{}}}],["getalltodos(filterobj?:todofilter",{"_index":638,"title":{},"body":{"injectables/TodoService.html":{}}}],["getalltodoslist",{"_index":592,"title":{},"body":{"injectables/TodoService.html":{}}}],["getarrvalue",{"_index":440,"title":{},"body":{"components/TasksListComponent.html":{}}}],["getarrvalue(val",{"_index":448,"title":{},"body":{"components/TasksListComponent.html":{}}}],["getarrvalue(val:any",{"_index":505,"title":{},"body":{"components/TasksListComponent.html":{}}}],["getkeybyvalue",{"_index":342,"title":{},"body":{"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":748,"title":{"index.html":{}},"body":{}}],["gettodos",{"_index":625,"title":{},"body":{"injectables/TodoService.html":{}}}],["go",{"_index":795,"title":{},"body":{"index.html":{}}}],["gradient(#6cb3d5",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":803,"title":{},"body":{"modules.html":{}}}],["group",{"_index":79,"title":{},"body":{"components/AddNewTaskComponent.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["group1",{"_index":321,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"miscellaneous/variables.html":{}}}],["group2",{"_index":322,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"miscellaneous/variables.html":{}}}],["group:number",{"_index":304,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["groupdata",{"_index":587,"title":{},"body":{"injectables/TodoService.html":{}}}],["grouped",{"_index":319,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["groupenum",{"_index":338,"title":{},"body":{"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["groupenumname",{"_index":348,"title":{},"body":{"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["groupenumname[getkeybyvalue(groupenum,item.group",{"_index":412,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["groupenumname[getkeybyvalue(this.groupenum",{"_index":486,"title":{},"body":{"components/TasksListComponent.html":{}}}],["groupenumname[itemx.key",{"_index":508,"title":{},"body":{"components/TasksListComponent.html":{}}}],["groupid",{"_index":481,"title":{},"body":{"components/TasksListComponent.html":{},"classes/TodoFilter.html":{}}}],["groupid:string",{"_index":312,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["groupname",{"_index":548,"title":{},"body":{"components/TasksListComponent.html":{}}}],["groups",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"injectables/TodoService.html":{}}}],["groupslist",{"_index":27,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["groupslist:any",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["h2",{"_index":92,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["h3",{"_index":521,"title":{},"body":{"components/TasksListComponent.html":{}}}],["header",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["header:hover",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["height",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["help",{"_index":793,"title":{},"body":{"index.html":{}}}],["home",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":131,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["http://localhost:4200",{"_index":761,"title":{},"body":{"index.html":{}}}],["i.allicon",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["i.deletedicon",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["i.doneicon",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["i.groupicon",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["i.homeicon",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["i.todayicon",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["i.weekicon",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["icon",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["id",{"_index":334,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["id:1",{"_index":618,"title":{},"body":{"injectables/TodoService.html":{}}}],["id:2",{"_index":619,"title":{},"body":{"injectables/TodoService.html":{}}}],["id:3",{"_index":620,"title":{},"body":{"injectables/TodoService.html":{}}}],["identifier",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["if(data",{"_index":325,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["if(e.checked",{"_index":492,"title":{},"body":{"components/TasksListComponent.html":{}}}],["if(filterobj",{"_index":646,"title":{},"body":{"injectables/TodoService.html":{}}}],["if(form.invalid",{"_index":65,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["img",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"index.html":{}}}],["import",{"_index":54,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialsModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"injectables/TodoService.html":{}}}],["important",{"_index":129,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["imports",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialsModule.html":{}}}],["indeterminate.mat",{"_index":557,"title":{},"body":{"components/TasksListComponent.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["infix",{"_index":535,"title":{},"body":{"components/TasksListComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/DateRange.html":{},"modules/MaterialsModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["injectable",{"_index":582,"title":{"injectables/TodoService.html":{}},"body":{"injectables/TodoService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":583,"title":{},"body":{"injectables/TodoService.html":{}}}],["inline",{"_index":104,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["inner",{"_index":113,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["iscompleted",{"_index":315,"title":{},"body":{"classes/DateRange.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["iscompleted:boolean",{"_index":307,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["isdeleted",{"_index":313,"title":{},"body":{"classes/DateRange.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["isdeleted:boolean",{"_index":308,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["item",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["item.date",{"_index":411,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["item.description",{"_index":409,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["item.name",{"_index":80,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["item.title",{"_index":407,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["item:hover",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["item:todo",{"_index":399,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["item?.priority",{"_index":410,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["itemindex",{"_index":493,"title":{},"body":{"components/TasksListComponent.html":{}}}],["ix",{"_index":496,"title":{},"body":{"components/TasksListComponent.html":{}}}],["ix:number",{"_index":495,"title":{},"body":{"components/TasksListComponent.html":{}}}],["json.parse(localstorage.getitem('todosdb",{"_index":640,"title":{},"body":{"injectables/TodoService.html":{}}}],["json.stringify(data",{"_index":674,"title":{},"body":{"injectables/TodoService.html":{}}}],["karma",{"_index":782,"title":{},"body":{"index.html":{}}}],["key",{"_index":602,"title":{},"body":{"injectables/TodoService.html":{}}}],["key:string",{"_index":697,"title":{},"body":{"injectables/TodoService.html":{}}}],["key:string,val:any",{"_index":681,"title":{},"body":{"injectables/TodoService.html":{}}}],["lastdate",{"_index":299,"title":{},"body":{"classes/DateRange.html":{},"components/TasksListComponent.html":{}}}],["lastdate:date",{"_index":318,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["left",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["legend",{"_index":130,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["li",{"_index":420,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["line",{"_index":518,"title":{},"body":{"components/TasksListComponent.html":{}}}],["linear",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["list",{"_index":143,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"injectables/TodoService.html":{}}}],["list.component",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.html",{"_index":435,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.scss",{"_index":434,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts",{"_index":433,"title":{},"body":{"components/TasksListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":449,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:15",{"_index":459,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:16",{"_index":463,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:17",{"_index":462,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:18",{"_index":460,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:19",{"_index":461,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:20",{"_index":464,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:21",{"_index":444,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:23",{"_index":465,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:73",{"_index":458,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:74",{"_index":450,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:80",{"_index":454,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:90",{"_index":457,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:93",{"_index":456,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:96",{"_index":446,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:99",{"_index":451,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list/tasks",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TasksListComponent.html":{},"coverage.html":{}}}],["literal",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage",{"_index":670,"title":{},"body":{"injectables/TodoService.html":{}}}],["localstorage.setitem('todosdb",{"_index":673,"title":{},"body":{"injectables/TodoService.html":{}}}],["margin",{"_index":90,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["mat",{"_index":94,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["matbuttonmodule",{"_index":356,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":380,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxchange",{"_index":453,"title":{},"body":{"components/TasksListComponent.html":{}}}],["matcheckboxmodule",{"_index":370,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":147,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/DateRange.html":{},"modules/MaterialsModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":372,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["matdividermodule",{"_index":358,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["materialcomponent",{"_index":384,"title":{},"body":{"modules/MaterialsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["materials/materials.module",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["materialsmodule",{"_index":252,"title":{"modules/MaterialsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialsModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":382,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":360,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":376,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":366,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["matnativedatemodule",{"_index":374,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["matradiomodule",{"_index":378,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["matselectmodule",{"_index":368,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodule",{"_index":362,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodule",{"_index":364,"title":{},"body":{"modules/MaterialsModule.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["menue",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["method",{"_index":637,"title":{},"body":{"injectables/TodoService.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["miscellaneous",{"_index":807,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm",{"_index":644,"title":{},"body":{"injectables/TodoService.html":{}}}],["models/todo",{"_index":398,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"injectables/TodoService.html":{}}}],["module",{"_index":243,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialsModule.html":{}},"body":{}}],["modules",{"_index":245,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialsModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":702,"title":{},"body":{"injectables/TodoService.html":{}}}],["month.length",{"_index":708,"title":{},"body":{"injectables/TodoService.html":{}}}],["more",{"_index":794,"title":{},"body":{"index.html":{}}}],["moustafa",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"index.html":{}}}],["name)?.length",{"_index":694,"title":{},"body":{"injectables/TodoService.html":{}}}],["name)[0",{"_index":695,"title":{},"body":{"injectables/TodoService.html":{}}}],["nav",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":760,"title":{},"body":{"index.html":{}}}],["need",{"_index":788,"title":{},"body":{"index.html":{}}}],["new",{"_index":11,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nextweek",{"_index":350,"title":{},"body":{"classes/DateRange.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":109,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"index.html":{}}}],["ngform",{"_index":48,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["ngmodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialsModule.html":{}}}],["ngoninit",{"_index":31,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["none",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["null",{"_index":300,"title":{},"body":{"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["number",{"_index":303,"title":{},"body":{"classes/DateRange.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["number(groupid",{"_index":487,"title":{},"body":{"components/TasksListComponent.html":{}}}],["number):todo",{"_index":335,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["obj",{"_index":447,"title":{},"body":{"components/TasksListComponent.html":{},"injectables/TodoService.html":{}}}],["obj:any,val:any):any",{"_index":343,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"miscellaneous/variables.html":{}}}],["obj[key",{"_index":345,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["obj[val",{"_index":503,"title":{},"body":{"components/TasksListComponent.html":{}}}],["object",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(obj).find(key",{"_index":344,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":76,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["opacity",{"_index":558,"title":{},"body":{"components/TasksListComponent.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["ourhome",{"_index":323,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":122,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["overview",{"_index":797,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":728,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":88,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["page",{"_index":799,"title":{},"body":{"index.html":{}}}],["pagetitle",{"_index":588,"title":{},"body":{"injectables/TodoService.html":{}}}],["pagetype",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TasksListComponent.html":{}}}],["panel",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["panel:hover",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["panelopenstate",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["params",{"_index":467,"title":{},"body":{"components/TasksListComponent.html":{}}}],["params.groupid",{"_index":483,"title":{},"body":{"components/TasksListComponent.html":{}}}],["patch",{"_index":679,"title":{},"body":{"injectables/TodoService.html":{}}}],["patchfield",{"_index":593,"title":{},"body":{"injectables/TodoService.html":{}}}],["patchfield(data",{"_index":610,"title":{},"body":{"injectables/TodoService.html":{}}}],["patchfield(data:todo",{"_index":680,"title":{},"body":{"injectables/TodoService.html":{}}}],["path",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["persistent",{"_index":117,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["platform",{"_index":785,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["position",{"_index":510,"title":{},"body":{"components/TasksListComponent.html":{}}}],["priority",{"_index":75,"title":{},"body":{"components/AddNewTaskComponent.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["private",{"_index":62,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TasksListComponent.html":{},"injectables/TodoService.html":{}}}],["production",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":750,"title":{},"body":{"index.html":{}}}],["properties",{"_index":26,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["providedin",{"_index":630,"title":{},"body":{"injectables/TodoService.html":{}}}],["providers",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":28,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["query",{"_index":466,"title":{},"body":{"components/TasksListComponent.html":{}}}],["radio",{"_index":98,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["radius",{"_index":527,"title":{},"body":{"components/TasksListComponent.html":{}}}],["range",{"_index":316,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["reactiveformsmodule",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":585,"title":{},"body":{"injectables/TodoService.html":{}}}],["redirectto",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":798,"title":{},"body":{"index.html":{}}}],["relative",{"_index":511,"title":{},"body":{"components/TasksListComponent.html":{}}}],["reload",{"_index":763,"title":{},"body":{"index.html":{}}}],["require",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":402,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["res.id",{"_index":403,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["res.pagetype",{"_index":468,"title":{},"body":{"components/TasksListComponent.html":{}}}],["reset",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":146,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/DateRange.html":{},"modules/MaterialsModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":148,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/DateRange.html":{},"modules/MaterialsModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":66,"title":{},"body":{"components/AddNewTaskComponent.html":{},"classes/DateRange.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["rgb(180",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":106,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["ripple",{"_index":115,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TasksListComponent.html":{}}}],["root",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"injectables/TodoService.html":{}}}],["root'},{'name",{"_index":138,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["rotate",{"_index":430,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["route",{"_index":390,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["router",{"_index":36,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TasksListComponent.html":{}}}],["routermodule",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":283,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":757,"title":{},"body":{"index.html":{}}}],["running",{"_index":776,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":629,"title":{},"body":{"injectables/TodoService.html":{},"dependencies.html":{}}}],["save",{"_index":671,"title":{},"body":{"injectables/TodoService.html":{}}}],["saveall",{"_index":594,"title":{},"body":{"injectables/TodoService.html":{}}}],["saveall(data",{"_index":612,"title":{},"body":{"injectables/TodoService.html":{}}}],["saveall(data:todo",{"_index":672,"title":{},"body":{"injectables/TodoService.html":{}}}],["scaffolding",{"_index":767,"title":{},"body":{"index.html":{}}}],["search",{"_index":311,"title":{},"body":{"classes/DateRange.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["searchval",{"_index":437,"title":{},"body":{"components/TasksListComponent.html":{}}}],["section",{"_index":83,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TasksListComponent.html":{}}}],["selected",{"_index":507,"title":{},"body":{"components/TasksListComponent.html":{}}}],["selecteditems",{"_index":438,"title":{},"body":{"components/TasksListComponent.html":{}}}],["selectitem",{"_index":441,"title":{},"body":{"components/TasksListComponent.html":{}}}],["selectitem(e",{"_index":452,"title":{},"body":{"components/TasksListComponent.html":{}}}],["selectitem(e:matcheckboxchange,item:todo",{"_index":491,"title":{},"body":{"components/TasksListComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["serve",{"_index":758,"title":{},"body":{"index.html":{}}}],["server",{"_index":756,"title":{},"body":{"index.html":{}}}],["services/todo.service",{"_index":55,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["set",{"_index":633,"title":{},"body":{"injectables/TodoService.html":{}}}],["settitle",{"_index":595,"title":{},"body":{"injectables/TodoService.html":{}}}],["settitle(title",{"_index":614,"title":{},"body":{"injectables/TodoService.html":{}}}],["settodos(val",{"_index":627,"title":{},"body":{"injectables/TodoService.html":{}}}],["shadow",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["sideavatar",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenav",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["single",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["solid",{"_index":423,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/DateRange.html":{},"modules/MaterialsModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"index.html":{}}}],["span",{"_index":425,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["spec\\.ts",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../materials.module.ts",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../todo.ts",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/add",{"_index":10,"title":{},"body":{"components/AddNewTaskComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/materials/materials.module.ts",{"_index":354,"title":{},"body":{"modules/MaterialsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/todo.ts",{"_index":297,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/todo.ts:14",{"_index":573,"title":{},"body":{"classes/TodoFilter.html":{}}}],["src/app/models/todo.ts:15",{"_index":569,"title":{},"body":{"classes/TodoFilter.html":{}}}],["src/app/models/todo.ts:16",{"_index":570,"title":{},"body":{"classes/TodoFilter.html":{}}}],["src/app/models/todo.ts:17",{"_index":567,"title":{},"body":{"classes/TodoFilter.html":{}}}],["src/app/models/todo.ts:18",{"_index":572,"title":{},"body":{"classes/TodoFilter.html":{}}}],["src/app/models/todo.ts:19",{"_index":571,"title":{},"body":{"classes/TodoFilter.html":{}}}],["src/app/models/todo.ts:20",{"_index":568,"title":{},"body":{"classes/TodoFilter.html":{}}}],["src/app/models/todo.ts:25",{"_index":301,"title":{},"body":{"classes/DateRange.html":{}}}],["src/app/models/todo.ts:26",{"_index":302,"title":{},"body":{"classes/DateRange.html":{}}}],["src/app/models/todo.ts:3",{"_index":566,"title":{},"body":{"classes/Todo.html":{}}}],["src/app/models/todo.ts:31",{"_index":578,"title":{},"body":{"classes/TodoGrouped.html":{}}}],["src/app/models/todo.ts:32",{"_index":579,"title":{},"body":{"classes/TodoGrouped.html":{}}}],["src/app/models/todo.ts:33",{"_index":576,"title":{},"body":{"classes/TodoGrouped.html":{}}}],["src/app/models/todo.ts:4",{"_index":565,"title":{},"body":{"classes/Todo.html":{}}}],["src/app/models/todo.ts:41",{"_index":581,"title":{},"body":{"classes/TodoGrouped.html":{}}}],["src/app/models/todo.ts:5",{"_index":562,"title":{},"body":{"classes/Todo.html":{}}}],["src/app/models/todo.ts:6",{"_index":561,"title":{},"body":{"classes/Todo.html":{}}}],["src/app/models/todo.ts:7",{"_index":560,"title":{},"body":{"classes/Todo.html":{}}}],["src/app/models/todo.ts:8",{"_index":563,"title":{},"body":{"classes/Todo.html":{}}}],["src/app/models/todo.ts:9",{"_index":564,"title":{},"body":{"classes/Todo.html":{}}}],["src/app/services/todo.service.ts",{"_index":584,"title":{},"body":{"injectables/TodoService.html":{},"coverage.html":{}}}],["src/app/services/todo.service.ts:115",{"_index":615,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:16",{"_index":621,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:31",{"_index":617,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:32",{"_index":624,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:33",{"_index":626,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:37",{"_index":628,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:40",{"_index":598,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:45",{"_index":607,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:68",{"_index":609,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:73",{"_index":613,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:78",{"_index":600,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:84",{"_index":611,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:93",{"_index":605,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:98",{"_index":603,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/task",{"_index":385,"title":{},"body":{"components/TaskDetailsComponent.html":{},"coverage.html":{}}}],["src/app/tasks",{"_index":432,"title":{},"body":{"components/TasksListComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":749,"title":{"index.html":{}},"body":{}}],["statements",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":773,"title":{},"body":{"index.html":{}}}],["string",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"classes/DateRange.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["strong",{"_index":103,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["style",{"_index":550,"title":{},"body":{"components/TasksListComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["submitform",{"_index":32,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["submitform(form",{"_index":47,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["support",{"_index":800,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":801,"title":{},"body":{"modules.html":{}}}],["table",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":20,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["task'},{'name",{"_index":136,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["task.component",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["task.component.html",{"_index":24,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["task.component.scss",{"_index":22,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["task.component.ts",{"_index":13,"title":{},"body":{"components/AddNewTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:12",{"_index":38,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["task.component.ts:14",{"_index":53,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["task.component.ts:19",{"_index":44,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["task.component.ts:24",{"_index":49,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["task/add",{"_index":12,"title":{},"body":{"components/AddNewTaskComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["taskdetails",{"_index":414,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["taskdetails/:id",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["taskdetailscomponent",{"_index":139,"title":{"components/TaskDetailsComponent.html":{}},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskgroups",{"_index":536,"title":{},"body":{"components/TasksListComponent.html":{}}}],["tasks",{"_index":142,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["taskslist",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["taskslistcomponent",{"_index":141,"title":{"components/TasksListComponent.html":{}},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["test",{"_index":779,"title":{},"body":{"index.html":{}}}],["testing",{"_index":790,"title":{},"body":{"index.html":{}}}],["tests",{"_index":778,"title":{},"body":{"index.html":{}}}],["text",{"_index":538,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this._todos.asobservable",{"_index":623,"title":{},"body":{"injectables/TodoService.html":{}}}],["this._todos.getvalue",{"_index":632,"title":{},"body":{"injectables/TodoService.html":{}}}],["this._todos.next(val",{"_index":635,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.datepipe.transform(el.date",{"_index":665,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.datepipe.transform(filterobj.date",{"_index":664,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.datepipe.transform(new",{"_index":642,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.editval(el,key",{"_index":688,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.filterdata(data,groupenum.group1",{"_index":328,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["this.filterdata(data,groupenum.group2",{"_index":330,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["this.filterdata(data,groupenum.ourhome",{"_index":332,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["this.getalltodos(filter",{"_index":690,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.getalltodoslist",{"_index":683,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.group1",{"_index":327,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["this.group2",{"_index":329,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["this.groupslist",{"_index":63,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["this.item",{"_index":404,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["this.ourhome",{"_index":331,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{}}}],["this.pagetype",{"_index":469,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.route.params.subscribe((res:any",{"_index":401,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["this.route.queryparams.subscribe((params:any",{"_index":482,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.router.navigate",{"_index":69,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TasksListComponent.html":{}}}],["this.saveall(alldata",{"_index":689,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.saveall(todolist",{"_index":678,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.selecteditems",{"_index":499,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.selecteditems.findindex((el:todo",{"_index":494,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.selecteditems.splice(itemindex,1",{"_index":497,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todofilter",{"_index":471,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todofilter.date",{"_index":472,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todofilter.daterange",{"_index":479,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todofilter.groupid",{"_index":484,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todofilter.iscompleted",{"_index":477,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todofilter.isdeleted",{"_index":474,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todos",{"_index":667,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todoser.addnew(form.value",{"_index":68,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["this.todoser.findbyname(res.id",{"_index":405,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["this.todoser.getalltodos(this.todofilter",{"_index":488,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todoser.groupdata",{"_index":64,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["this.todoser.patchfield(this.selecteditems",{"_index":500,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todoser.settitle",{"_index":485,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todoser.settitle('all",{"_index":480,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todoser.settitle('completed",{"_index":476,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todoser.settitle('deleted",{"_index":473,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todoser.settitle('next",{"_index":478,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todoser.settitle('today",{"_index":470,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.todoser.todos$.subscribe(res",{"_index":489,"title":{},"body":{"components/TasksListComponent.html":{}}}],["through",{"_index":540,"title":{},"body":{"components/TasksListComponent.html":{}}}],["title",{"_index":73,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["today",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"classes/DateRange.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"miscellaneous/variables.html":{}}}],["today.getdate()+7",{"_index":353,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"miscellaneous/variables.html":{}}}],["today.getmonth",{"_index":352,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":158,"title":{"classes/Todo.html":{}},"body":{"components/AppComponent.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["todofilter",{"_index":310,"title":{"classes/TodoFilter.html":{}},"body":{"classes/DateRange.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["todogrouped",{"_index":320,"title":{"classes/TodoGrouped.html":{}},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["todogrouped(filtereditems",{"_index":668,"title":{},"body":{"injectables/TodoService.html":{}}}],["todogrouped(todolist",{"_index":669,"title":{},"body":{"injectables/TodoService.html":{}}}],["todolist",{"_index":639,"title":{},"body":{"injectables/TodoService.html":{},"index.html":{}}}],["todolist.filter((el",{"_index":649,"title":{},"body":{"injectables/TodoService.html":{}}}],["todolist.push(data",{"_index":677,"title":{},"body":{"injectables/TodoService.html":{}}}],["todos",{"_index":349,"title":{},"body":{"classes/DateRange.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["todos(val:todogrouped",{"_index":634,"title":{},"body":{"injectables/TodoService.html":{}}}],["todosdelete",{"_index":442,"title":{},"body":{"components/TasksListComponent.html":{}}}],["todosdone",{"_index":443,"title":{},"body":{"components/TasksListComponent.html":{}}}],["todoser",{"_index":29,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["todoser.pagetitle",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["todoser:todoservice",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["todoservice",{"_index":35,"title":{"injectables/TodoService.html":{}},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["todoservice,private",{"_index":400,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["toolbar",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":91,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["transform",{"_index":429,"title":{},"body":{"components/TaskDetailsComponent.html":{}}}],["transition",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["transparent",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["true",{"_index":475,"title":{},"body":{"components/TasksListComponent.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["true,this.todofilter",{"_index":501,"title":{},"body":{"components/TasksListComponent.html":{}}}],["try",{"_index":67,"title":{},"body":{"components/AddNewTaskComponent.html":{}}}],["tslib",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":77,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ul",{"_index":419,"title":{},"body":{"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{}}}],["underline",{"_index":529,"title":{},"body":{"components/TasksListComponent.html":{}}}],["unit",{"_index":777,"title":{},"body":{"index.html":{}}}],["use",{"_index":769,"title":{},"body":{"index.html":{}}}],["val",{"_index":346,"title":{},"body":{"classes/DateRange.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["val:any",{"_index":698,"title":{},"body":{"injectables/TodoService.html":{}}}],["value",{"_index":52,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":134,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"classes/DateRange.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"classes/Todo.html":{},"classes/TodoFilter.html":{},"classes/TodoGrouped.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":808,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":754,"title":{},"body":{"index.html":{}}}],["via",{"_index":781,"title":{},"body":{"index.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/TaskDetailsComponent.html":{},"components/TasksListComponent.html":{},"injectables/TodoService.html":{}}}],["week",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["width",{"_index":96,"title":{},"body":{"components/AddNewTaskComponent.html":{},"components/AppComponent.html":{},"components/TasksListComponent.html":{}}}],["wrapper",{"_index":528,"title":{},"body":{"components/TasksListComponent.html":{}}}],["year",{"_index":706,"title":{},"body":{"injectables/TodoService.html":{}}}],["yes",{"_index":577,"title":{},"body":{"classes/TodoGrouped.html":{},"injectables/TodoService.html":{}}}],["yyyy",{"_index":643,"title":{},"body":{"injectables/TodoService.html":{}}}],["zone.js",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddNewTaskComponent.html":{"url":"components/AddNewTaskComponent.html","title":"component - AddNewTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddNewTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-new-task/add-new-task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-new-task\n            \n\n            \n                styleUrls\n                ./add-new-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-new-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groupsList\n                            \n                            \n                                    Public\n                                todoSer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoSer: TodoService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-new-task/add-new-task.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoSer\n                                                  \n                                                        \n                                                                        TodoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-new-task/add-new-task.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-new-task/add-new-task.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        groupsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/add-new-task/add-new-task.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        todoSer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TodoService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/add-new-task/add-new-task.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TodoService } from './../services/todo.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-new-task',\n  templateUrl: './add-new-task.component.html',\n  styleUrls: ['./add-new-task.component.scss']\n})\nexport class AddNewTaskComponent implements OnInit {\n  groupsList :any[]= [];\n\n  constructor(public todoSer: TodoService, private router: Router) {\n\n\n  }\n\n  ngOnInit(): void {\n    this.groupsList = this.todoSer.groupData;\n\n  }\n\n  submitForm(form: NgForm) {\n    if(form.invalid) {\n      return\n    }\n    try {\n      this.todoSer.addNew(form.value);\n      this.router.navigate(['/'])\n    } catch (error) {\nconsole.log(error)\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n     Add New Task\n    \n    \n      \n        \n          \n          \n            \n              Title\n              \n            \n          \n          \n          \n            \n              Description\n              \n            \n          \n          \n          \n            \n              priority\n              One\n              Two\n            \n          \n          \n          \n            \n              Date\n              \n              \n              \n            \n          \n          \n          \n            \n              Group\n              \n                {{item.name}}\n              \n            \n          \n          \n          \n            \n              \n                \n                \n                  Add\n              \n              \n                \n                \n                  Clear\n              \n              \n                \n                \n                  Back\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-new-task.component.scss\n                \n                /* Add Task Section */\n.addTask {\n  background-color: #fff;\n  padding: 30px;\n  margin-top: 30px;\n\n  h2 {\n    margin-bottom: 30px;\n  }\n\n  mat-form-field {\n    width: 100%;\n  }\n\n  mat-radio-group {\n    margin: 20px 0;\n    display: block;\n\n    strong {\n      display: inline-block;\n      margin-bottom: 10px;\n      margin-right: 20px;\n      color: #787878;\n    }\n\n    mat-radio-button {\n      margin-right: 30px;\n    }\n  }\n\n  /* Ng Deep */\n  ::ng-deep .mat-radio-button.mat-accent .mat-radio-inner-circle,\n  .mat-radio-button.mat-accent\n    .mat-radio-ripple\n    .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,\n  .mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\n    background-color: #4d708e;\n  }\n  ::ng-deep\n    .mat-radio-button.mat-accent.mat-radio-checked\n    .mat-radio-outer-circle {\n    border-color: #4d708e;\n  }\n\n  .buttonsTree {\n    margin-top: 30px;\n\n    button {\n      color: #fff;\n    }\n\n    .add {\n      background-color: #72e097;\n    }\n\n    .clear {\n      background-color: #ff9c9c;\n    }\n\n    .back {\n      background-color: #2d2d2d;\n    }\n\n    .disabledButton {\n      background: #787878 !important;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Add New Task                                                                    Title                                                                                  Description                                                                                  priority              One              Two                                                                    Date                                                                                                              Group                              {{item.name}}                                                                                                                                    Add                                                                              Clear                                                                              Back                                                        '\n    var COMPONENTS = [{'name': 'AddNewTaskComponent', 'selector': 'app-add-new-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddNewTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groupsList\n                            \n                            \n                                panelOpenState\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                todoSer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoSer: TodoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoSer\n                                                  \n                                                        \n                                                                        TodoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        groupsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        panelOpenState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ToDo-List'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        todoSer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TodoService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TodoService } from './services/todo.service';\nimport { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  panelOpenState = false;\n  title = 'ToDo-List';\n  groupsList:any[] = [];\n  constructor(public todoSer:TodoService) {\n    this.groupsList = this.todoSer.groupData;\n\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n      Moustafa Elkady\n      \n    \n\n    \n      \n        \n          \n          Home\n        \n        \n          \n          All\n        \n        \n          \n          Today\n        \n        \n          \n          Week\n        \n        \n          \n          Done\n        \n        \n          \n          Deleted\n        \n        \n          \n            \n              \n                \n                Groups\n              \n            \n            \n              {{item.name}}\n            \n          \n        \n      \n    \n\n  \n  \n    \n      \n        menu\n      \n      {{todoSer.pageTitle$ | async}} Tasks\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                /* Mat Toolbar */\nmat-toolbar {\n  background-color: #4d708e;\n  color: #fff;\n\n  mat-icon {\n    font-size: 24px;\n  }\n\n  strong {\n    font-size: 16px;\n  }\n}\n.mat-toolbar-row,\n.mat-toolbar-single-row {\n  height: 45px;\n}\n\n/* Side Nav */\nmat-sidenav {\n  width: 220px;\n  height: 100vh;\n\n  /* Mat Toolbar */\n  mat-toolbar {\n    background-color: #678cab;\n  }\n\n  /* Side Avatar */\n  .sideAvatar {\n    background-color: #f1fdff;\n    padding: 7px 10px;\n    img {\n      width: 20%;\n    }\n    .avatarName {\n      margin-left: 10px;\n    }\n\n    i {\n      margin-left: 10px;\n    }\n  }\n\n  /* Side Menue */\n  .menue {\n    margin: 10px 0 0 0;\n\n    mat-list {\n      height: 100%;\n    }\n\n    mat-list-item {\n      font-size: 15px;\n      color: #6d6d6d;\n      cursor: pointer;\n      transition: 0.3s;\n      i {\n        margin-right: 10px;\n        margin-left: 30px;\n        color: rgb(180, 180, 180);\n        transition: 0.3s;\n      }\n\n      i.homeIcon {\n        color: #00656a;\n      }\n\n      i.allIcon {\n        color: #97b92f;\n      }\n\n      i.todayIcon {\n        color: #a22e45;\n      }\n\n      i.weekIcon {\n        color: #fdb522;\n      }\n\n      i.doneIcon {\n        color: #0a6a3c;\n      }\n\n      i.deletedIcon {\n        color: #f36523;\n      }\n\n      i.groupIcon {\n        color: #4e534d;\n      }\n    }\n\n    mat-list-item:hover {\n      background-color: #f1fdff;\n      color: #4d708e;\n    }\n\n    .activeSideLink {\n      background-color: #f1fdff;\n      color: #4d708e;\n\n      i {\n        color: #4d708e;\n      }\n    }\n\n    mat-list-item:hover i {\n      color: #4d708e;\n    }\n  }\n\n  mat-accordion {\n    display: block;\n    mat-expansion-panel {\n      background-color: transparent;\n      box-shadow: none !important;\n\n      i {\n        margin-right: 5px;\n        color: #4e534d;\n      }\n    }\n\n    mat-expansion-panel:hover mat-list-item {\n      color: #2d2d2d;\n    }\n\n    mat-expansion-panel-header {\n      mat-panel-title {\n        padding-left: 22px;\n        color: #6d6d6d;\n      }\n    }\n\n    mat-expansion-panel-header:hover {\n      background-color: none !important;\n    }\n\n    mat-list-item {\n      padding-left: 23px;\n      font-size: 13px !important;\n    }\n\n    mat-list-item:hover {\n      background-color: #ddd;\n    }\n\n    mat-list-item:hover {\n      background-color: #ddd;\n    }\n  }\n}\n\n/* Mat Side Content */\nmat-sidenav-content {\n  height: 100vh;\n  background: linear-gradient(#6cb3d5, #d0e4e0);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Moustafa Elkady                                                Home                                    All                                    Today                                    Week                                    Done                                    Deleted                                                                                    Groups                                                    {{item.name}}                                                              menu            {{todoSer.pageTitle$ | async}} Tasks          '\n    var COMPONENTS = [{'name': 'AddNewTaskComponent', 'selector': 'app-add-new-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAddNewTaskComponent\n\nAddNewTaskComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddNewTaskComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nTaskDetailsComponent\n\nTaskDetailsComponent\n\nAppModule -->\n\nTaskDetailsComponent->AppModule\n\n\n\n\n\nTasksListComponent\n\nTasksListComponent\n\nAppModule -->\n\nTasksListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialsModule\n\nMaterialsModule\n\nAppModule -->\n\nMaterialsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddNewTaskComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            TaskDetailsComponent\n                        \n                        \n                            TasksListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MaterialsModule } from './materials/materials.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AddNewTaskComponent } from './add-new-task/add-new-task.component';\nimport { TaskDetailsComponent } from './task-details/task-details.component';\nimport { DatePipe } from '@angular/common';\nimport { TasksListComponent } from './tasks-list/tasks-list.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddNewTaskComponent,\n    TaskDetailsComponent,\n    TasksListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialsModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  exports: [\n\n  ],\n  providers: [\nDatePipe\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { TasksListComponent } from './tasks-list/tasks-list.component';\nimport { TaskDetailsComponent } from './task-details/task-details.component';\nimport { AddNewTaskComponent } from './add-new-task/add-new-task.component';\nimport { NgModule, Component } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\nredirectTo: '/home' , pathMatch: 'full',\ndata: {title: 'All'}\n},\n  /* {\n    path: 'home',\n    component: AddNewComponent,\n    data: {title: 'All'}\n  }, */\n  {\n    path: 'taskslist',\n    component: TasksListComponent,\n    data: {title: 'All'}\n  },\n  {\n    path: 'addtask',\n    component: AddNewTaskComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: ':pageType',\n    component: TasksListComponent,\n  },\n\n  {\n    path: 'taskdetails/:id',\n    component: TaskDetailsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateRange.html":{"url":"classes/DateRange.html","title":"class - DateRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/todo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstDate\n                            \n                            \n                                lastDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Todo {\n    title: string | null = null;\n    priority: number | null = null;\n    group:number | null = null;\n    description:string | null = null;\n    date:Date | null = null;\n    isCompleted:boolean | null = null;\n    isDeleted:boolean | null = null;\n}\n\n/* Todo Filter */\nexport class TodoFilter {\n    search: string  = '';\n    group:number | null = null;\n    groupId:string | null = null;\n    date:Date | null = null;\n    isDeleted : boolean | null = null;\n    isCompleted : boolean | null = null;\n    dateRange : DateRange = new DateRange()\n\n}\n/* Date Range */\nexport class DateRange {\nfirstDate:Date | null = null;\nlastDate:Date | null = null;\n}\n\n/* Todo Grouped */\nexport class TodoGrouped {\n      group1 : Todo[] = [];\n      group2 : Todo[] = [];\n      ourHome : Todo[] = [];\n      constructor(data?:Todo[]) {\n        if(data && data.length) {\n          this.group1 = this.filterData(data,groupEnum.group1);\n          this.group2 = this.filterData(data,groupEnum.group2);\n          this.ourHome = this.filterData(data,groupEnum.ourHome);\n        }\n      }\n        filterData(data:Todo[], id: number):Todo[] {\n          return data.filter((el:Todo) => el.group == id)\n        }\n}\n\n\nexport const groupEnum : any = {\n  group1 : 1,\n  group2 : 2,\n  ourHome : 3\n}\n\nexport const getKeyByvalue =  (obj:any,val:any):any => {\n     return Object.keys(obj).find(key => obj[key] === val) || ''\n}\n\n/* Group Enums */\nexport const groupEnumName : any = {\n    group1 : 'Group 1',\n    group2 : 'Group 2',\n    ourHome : 'Our Home ToDos'\n}\n\n\n\n/* Get Date */\nexport const nextweek = () => {\n  var today = new Date();\n  var nextweek = new Date(today.getFullYear(), today.getMonth(), today.getDate()+7);\n  return nextweek;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialsModule.html":{"url":"modules/MaterialsModule.html","title":"module - MaterialsModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/materials/materials.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\n\nconst materialComponent = [\n  MatButtonModule,\n  MatDividerModule,\n  MatIconModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatSelectModule,\n  MatCheckboxModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatInputModule,\n  MatRadioModule,\n  MatCardModule,\n  MatExpansionModule\n]\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    materialComponent\n  ],\n  exports: [\n    materialComponent\n  ]\n})\nexport class MaterialsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDetailsComponent.html":{"url":"components/TaskDetailsComponent.html","title":"component - TaskDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/task-details/task-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-details\n            \n\n            \n                styleUrls\n                ./task-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getKeyByvalue\n                            \n                            \n                                groupEnum\n                            \n                            \n                                groupEnumName\n                            \n                            \n                                item\n                            \n                            \n                                    Public\n                                todoSer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoSer: TodoService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/task-details/task-details.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoSer\n                                                  \n                                                        \n                                                                        TodoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/task-details/task-details.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getKeyByvalue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getKeyByvalue\n                    \n                \n                    \n                        \n                                Defined in src/app/task-details/task-details.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : groupEnum\n                    \n                \n                    \n                        \n                                Defined in src/app/task-details/task-details.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupEnumName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : groupEnumName\n                    \n                \n                    \n                        \n                                Defined in src/app/task-details/task-details.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo\n\n                    \n                \n                \n                    \n                        Default value : new Todo()\n                    \n                \n                    \n                        \n                                Defined in src/app/task-details/task-details.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        todoSer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TodoService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/task-details/task-details.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Todo, groupEnum, groupEnumName, getKeyByvalue } from './../models/todo';\nimport { TodoService } from './../services/todo.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-task-details',\n  templateUrl: './task-details.component.html',\n  styleUrls: ['./task-details.component.scss']\n})\nexport class TaskDetailsComponent implements OnInit {\nitem:Todo = new Todo();\ngroupEnum = groupEnum;\ngetKeyByvalue = getKeyByvalue;\ngroupEnumName = groupEnumName;\n  constructor(public todoSer: TodoService,private route: ActivatedRoute) {\n    this.route.params.subscribe((res:any) => {\n      res && res.id ? this.item = this.todoSer.findByName(res.id) : null;\n      console.log('item',this.item)\n    })\n  }\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n             {{item.title}} / Details\n            \n              \n              \n                  Title\n                {{item.title}}\n              \n              \n              \n                 Discription\n                {{item.description}}\n              \n              \n              \n                 Priority\n                {{item?.priority == 1 ? 'One' : 'Two'}}\n              \n              \n              \n                 Date\n                {{item.date | date}}\n              \n              \n              \n                 Group\n                {{groupEnumName[getKeyByvalue(groupEnum,item.group)]}}\n              \n            \n            \n            \n               Back To Home\n            \n          \n        \n      \n    \n  \n\n\n\n  No Data Found !\n\n\n    \n\n    \n                \n                    ./task-details.component.scss\n                \n                /* Task Details */\n.taskDetails {\n  margin-top: 40px;\n\n  h2 {\n    color: #678cab;\n    i {\n      margin-right: 6px;\n      font-size: 17px;\n      color: #787878;\n    }\n  }\n\n  mat-card {\n    padding: 20px;\n    ul li {\n      padding: 30px;\n      transition: 0.2s;\n      margin-bottom: 20px;\n      border: 1px solid #ddd;\n\n      ::ng-deep .mat-radio-outer-circle {\n        border-color: #4d708e;\n      }\n\n      strong {\n        display: block;\n        font-size: 17px;\n        margin-bottom: 7px;\n        color: #4d708e;\n\n        i {\n          margin-right: 3px;\n        }\n      }\n\n      span {\n        color: #787878;\n        margin-left: 20px;\n      }\n    }\n    .backButton {\n      padding: 30px 0;\n      button {\n        background-color: #787878;\n        color: #fff;\n\n        i {\n          transition: linear 0.4s;\n        }\n      }\n\n      button:hover i {\n        transform: rotate(-360deg);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                       {{item.title}} / Details                                                          Title                {{item.title}}                                                           Discription                {{item.description}}                                                           Priority                {{item?.priority == 1 ? \\'One\\' : \\'Two\\'}}                                                           Date                {{item.date | date}}                                                           Group                {{groupEnumName[getKeyByvalue(groupEnum,item.group)]}}                                                                 Back To Home                                            No Data Found !'\n    var COMPONENTS = [{'name': 'AddNewTaskComponent', 'selector': 'app-add-new-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksListComponent.html":{"url":"components/TasksListComponent.html","title":"component - TasksListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TasksListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks-list/tasks-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks-list\n            \n\n            \n                styleUrls\n                ./tasks-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tasks-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkItem\n                            \n                            \n                                groupEnum\n                            \n                            \n                                groupEnumName\n                            \n                            \n                                groupsList\n                            \n                            \n                                pageType\n                            \n                            \n                                searchVal\n                            \n                            \n                                selectedItems\n                            \n                            \n                                todoFilter\n                            \n                            \n                                    Public\n                                todoSer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkFileld\n                            \n                            \n                                getArrValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                search\n                            \n                            \n                                selectItem\n                            \n                            \n                                todosDelete\n                            \n                            \n                                todosDone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoSer: TodoService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks-list/tasks-list.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoSer\n                                                  \n                                                        \n                                                                        TodoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkFileld\n                        \n                    \n                \n            \n            \n                \ncheckFileld(obj: any, val: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks-list/tasks-list.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    val\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getArrValue\n                        \n                    \n                \n            \n            \n                \ngetArrValue(val: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks-list/tasks-list.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Todo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks-list/tasks-list.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks-list/tasks-list.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectItem\n                        \n                    \n                \n            \n            \n                \nselectItem(e: MatCheckboxChange, item: Todo, i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks-list/tasks-list.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todosDelete\n                        \n                    \n                \n            \n            \n                \ntodosDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks-list/tasks-list.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todosDone\n                        \n                    \n                \n            \n            \n                \ntodosDone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks-list/tasks-list.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        checkItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks-list/tasks-list.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : groupEnum\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks-list/tasks-list.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupEnumName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : groupEnumName\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks-list/tasks-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks-list/tasks-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks-list/tasks-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchVal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks-list/tasks-list.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks-list/tasks-list.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todoFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TodoFilter\n\n                    \n                \n                \n                    \n                        Default value : new TodoFilter()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks-list/tasks-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        todoSer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TodoService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks-list/tasks-list.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TodoFilter, groupEnumName, nextweek, getKeyByvalue, groupEnum } from './../models/todo';\nimport { TodoService } from './../services/todo.service';\nimport { Component, OnInit, Query } from '@angular/core';\nimport { Todo } from '../models/todo';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-tasks-list',\n  templateUrl: './tasks-list.component.html',\n  styleUrls: ['./tasks-list.component.scss']\n})\n\nexport class TasksListComponent implements OnInit {\n  groupEnum = groupEnum;\n  selectedItems: Todo[] = [];\n  searchVal: string = '';\n  groupEnumName = groupEnumName;\n  groupsList :any[] = [];\n  todoFilter: TodoFilter = new TodoFilter();\n  pageType: string = '';\n\nconstructor(public todoSer: TodoService, private route: ActivatedRoute, private router :Router) {\n  this.route.params.subscribe((res:any) => {\n    res && res.pageType ? this.pageType = res.pageType : this.pageType = '';\n\n   if (this.pageType == 'today') {\n     this.todoSer.setTitle('Today');\n     this.todoFilter = new TodoFilter();\n     this.todoFilter.date = new Date() ;\n    } else if (this.pageType == 'isDeleted') {\n      this.todoSer.setTitle('Deleted');\n      this.todoFilter = new TodoFilter();\n      this.todoFilter.isDeleted = true\n    } else if (this.pageType == 'isCompleted') {\n      this.todoSer.setTitle('Completed');\n      this.todoFilter = new TodoFilter();\n      this.todoFilter.isCompleted = true\n    } else if (this.pageType == 'week') {\n      this.todoSer.setTitle('Next week');\n      this.todoFilter = new TodoFilter();\n      this.todoFilter.dateRange = {\n        firstDate : new Date(),\n        lastDate : nextweek()\n      }\n    } else if (this.pageType == 'all' || this.pageType == 'home') {\n      this.todoSer.setTitle('All');\n      this.todoFilter = new TodoFilter();\n    } else if (this.pageType == 'group' ) {\n\n      this.todoFilter = new TodoFilter();\n      let groupId: string = '';\n      this.route.queryParams.subscribe((params:any )=> {\n        params && params.groupId ?  groupId = params.groupId : null;\n        this.todoFilter.groupId  = groupId;\n        this.todoSer.setTitle( groupEnumName[getKeyByvalue(this.groupEnum, Number(groupId))] + ' /');\n        this.todoSer.getAllTodos(this.todoFilter)\n\n      })\n\n    }else {\n      this.todoSer.setTitle('All');\n      this.router.navigate(['/'])\n      this.todoFilter = new TodoFilter();\n\n    }\n    this.todoSer.getAllTodos(this.todoFilter)\n\n\n  });\n}\n\ncheckItem: any;\nngOnInit(): void {\n  this.groupsList = this.todoSer.groupData;\n    this.todoSer.todos$.subscribe(res=> {\n      console.log(res)\n    })\n  }\nselectItem(e:MatCheckboxChange,item:Todo, i: number) {\n  if(e.checked) {\n    const itemIndex = this.selectedItems.findIndex((el:Todo, ix:number)=> i == ix);\n  itemIndex  i == ix);\n this.selectedItems.splice(itemIndex,1);\n}\nconsole.log('this.selectedItems', this.selectedItems);\n}\ntodosDone() {\n  this.todoSer.patchField(this.selectedItems, 'isCompleted', true, this.todoFilter);\n}\ntodosDelete() {\n  this.todoSer.patchField(this.selectedItems, 'isDeleted', true,this.todoFilter);\n}\ncheckFileld(obj:any,val:string): boolean{\n  return obj[val];\n}\nsearch() {\n  console.log('this.todoFilter',this.todoFilter)\nthis.todoSer.getAllTodos(this.todoFilter)\n}\ngetArrValue(val:any): Todo[] {\nreturn val\n}\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      New Task\n    \n  \n\n  \n  \n    Filter By\n    \n      \n        \n          \n          \n            \n              Date\n              \n              \n              \n            \n\n          \n          \n          \n            \n              Title\n              \n            \n          \n          \n          \n            \n              Group\n              \n                {{item.name}}\n              \n            \n          \n        \n      \n    \n  \n\n  \n  \n\n    \n    \n      \n      \n        \n        Delete Selected\n      \n      \n      \n        \n        Done\n      \n    \n\n    \n    \n      \n         {{groupEnumName[itemX.key]}}\n        \n          \n            \n              \n                \n                  \n                    {{item.title }}\n                    \n                  \n                \n                \n                  \n                    \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tasks-list.component.scss\n                \n                /* Add New Task */\n.addNewUp {\n  position: relative;\n  .addNew {\n    background-color: #183c5b;\n    color: #f1f1f1;\n    position: absolute;\n    top: -8px;\n    right: 0;\n    font-size: 12px;\n    line-height: 27px;\n  }\n}\n\n/* Filter Section */\n.filterSection {\n  h3 {\n    margin: 21px 0 0px;\n    color: #fff;\n    font-size: 14px;\n  }\n  /* Filter Form */\n  .filterForm {\n    background-color: #fff;\n    padding: 20px 0;\n\n    /* mat-form-field */\n    .mat-form-field {\n      line-height: 1;\n      width: 100%;\n      border: 1px solid #e0e0e0;\n      border-radius: 5px;\n    }\n    ::ng-deep .mat-form-field-wrapper {\n      padding-bottom: 0 !important;\n    }\n\n    ::ng-deep .mat-form-field-underline {\n      display: none;\n    }\n\n    ::ng-deep .mat-form-field-flex {\n      padding: 0.1em 0.5em 0 0.5em;\n    }\n\n    ::ng-deep .mat-form-field-appearance-fill .mat-form-field-infix {\n      padding: 3px;\n    }\n  }\n}\n\n/* Task Group */\n.taskGroups {\n  padding: 20px 0;\n\n  .completedItem {\n    text-decoration: line-through;\n    color: #72e097;\n  }\n\n  .deletedItem {\n    text-decoration: none;\n    color: #ff9c9c;\n  }\n\n  .controlButtons {\n    text-align: right;\n\n    button {\n      color: #fff;\n      line-height: 28px;\n    }\n\n    .deleteSelected {\n      background-color: #ff9c9c;\n    }\n\n    .doneSelected {\n      background-color: #72e097;\n      margin-left: 10px;\n    }\n\n    .disabledButton {\n      background: #787878 !important;\n    }\n  }\n\n  .group {\n    margin-top: 40px;\n  }\n\n  .firstGroup {\n    margin-top: 7px;\n  }\n\n  /* Group Name */\n  .groupName {\n    background-color: #629bb6;\n    color: #fff;\n    padding: 5px 20px 5px 10px;\n    font-size: 13px;\n    margin-bottom: 10px;\n    display: block;\n  }\n\n  /* Ul List */\n  ul {\n    list-style: none;\n    margin-top: 0;\n    padding: 0;\n\n    li {\n      background-color: #fff;\n      margin-top: 5px;\n      padding: 3px 20px;\n\n      .controls {\n        button {\n          width: 25px;\n          height: 25px;\n          margin-right: 10px;\n        }\n\n        .del {\n          background-color: #ff9c9c;\n        }\n\n        .done {\n          background-color: #72e097;\n        }\n\n        .info {\n          background-color: #646464;\n\n          i {\n            left: 10px;\n          }\n        }\n\n        i {\n          font-size: 12px;\n          position: absolute;\n          top: 7px;\n          left: 7px;\n        }\n      }\n\n      ::ng-deep .mat-checkbox-checked.mat-accent .mat-checkbox-background,\n      .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background {\n        background-color: #4d708e;\n      }\n      ::ng-deep\n        .mat-checkbox-checked.mat-accent\n        .mat-checkbox-ripple\n        .mat-ripple-element {\n        opacity: 0.03 !important;\n        background-color: #4d708e !important;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  New Task              Filter By                                                                Date                                                                                                              Title                                                                                  Group                              {{item.name}}                                                                                                Delete Selected                                  Done                                 {{groupEnumName[itemX.key]}}                                                                                                  {{item.title }}                                                                                                                                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AddNewTaskComponent', 'selector': 'app-add-new-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TaskDetailsComponent', 'selector': 'app-task-details'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Todo.html":{"url":"classes/Todo.html","title":"class - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/todo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                description\n                            \n                            \n                                group\n                            \n                            \n                                isCompleted\n                            \n                            \n                                isDeleted\n                            \n                            \n                                priority\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCompleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Todo {\n    title: string | null = null;\n    priority: number | null = null;\n    group:number | null = null;\n    description:string | null = null;\n    date:Date | null = null;\n    isCompleted:boolean | null = null;\n    isDeleted:boolean | null = null;\n}\n\n/* Todo Filter */\nexport class TodoFilter {\n    search: string  = '';\n    group:number | null = null;\n    groupId:string | null = null;\n    date:Date | null = null;\n    isDeleted : boolean | null = null;\n    isCompleted : boolean | null = null;\n    dateRange : DateRange = new DateRange()\n\n}\n/* Date Range */\nexport class DateRange {\nfirstDate:Date | null = null;\nlastDate:Date | null = null;\n}\n\n/* Todo Grouped */\nexport class TodoGrouped {\n      group1 : Todo[] = [];\n      group2 : Todo[] = [];\n      ourHome : Todo[] = [];\n      constructor(data?:Todo[]) {\n        if(data && data.length) {\n          this.group1 = this.filterData(data,groupEnum.group1);\n          this.group2 = this.filterData(data,groupEnum.group2);\n          this.ourHome = this.filterData(data,groupEnum.ourHome);\n        }\n      }\n        filterData(data:Todo[], id: number):Todo[] {\n          return data.filter((el:Todo) => el.group == id)\n        }\n}\n\n\nexport const groupEnum : any = {\n  group1 : 1,\n  group2 : 2,\n  ourHome : 3\n}\n\nexport const getKeyByvalue =  (obj:any,val:any):any => {\n     return Object.keys(obj).find(key => obj[key] === val) || ''\n}\n\n/* Group Enums */\nexport const groupEnumName : any = {\n    group1 : 'Group 1',\n    group2 : 'Group 2',\n    ourHome : 'Our Home ToDos'\n}\n\n\n\n/* Get Date */\nexport const nextweek = () => {\n  var today = new Date();\n  var nextweek = new Date(today.getFullYear(), today.getMonth(), today.getDate()+7);\n  return nextweek;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TodoFilter.html":{"url":"classes/TodoFilter.html","title":"class - TodoFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TodoFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/todo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                dateRange\n                            \n                            \n                                group\n                            \n                            \n                                groupId\n                            \n                            \n                                isCompleted\n                            \n                            \n                                isDeleted\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateRange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DateRange\n\n                    \n                \n                \n                    \n                        Default value : new DateRange()\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCompleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Todo {\n    title: string | null = null;\n    priority: number | null = null;\n    group:number | null = null;\n    description:string | null = null;\n    date:Date | null = null;\n    isCompleted:boolean | null = null;\n    isDeleted:boolean | null = null;\n}\n\n/* Todo Filter */\nexport class TodoFilter {\n    search: string  = '';\n    group:number | null = null;\n    groupId:string | null = null;\n    date:Date | null = null;\n    isDeleted : boolean | null = null;\n    isCompleted : boolean | null = null;\n    dateRange : DateRange = new DateRange()\n\n}\n/* Date Range */\nexport class DateRange {\nfirstDate:Date | null = null;\nlastDate:Date | null = null;\n}\n\n/* Todo Grouped */\nexport class TodoGrouped {\n      group1 : Todo[] = [];\n      group2 : Todo[] = [];\n      ourHome : Todo[] = [];\n      constructor(data?:Todo[]) {\n        if(data && data.length) {\n          this.group1 = this.filterData(data,groupEnum.group1);\n          this.group2 = this.filterData(data,groupEnum.group2);\n          this.ourHome = this.filterData(data,groupEnum.ourHome);\n        }\n      }\n        filterData(data:Todo[], id: number):Todo[] {\n          return data.filter((el:Todo) => el.group == id)\n        }\n}\n\n\nexport const groupEnum : any = {\n  group1 : 1,\n  group2 : 2,\n  ourHome : 3\n}\n\nexport const getKeyByvalue =  (obj:any,val:any):any => {\n     return Object.keys(obj).find(key => obj[key] === val) || ''\n}\n\n/* Group Enums */\nexport const groupEnumName : any = {\n    group1 : 'Group 1',\n    group2 : 'Group 2',\n    ourHome : 'Our Home ToDos'\n}\n\n\n\n/* Get Date */\nexport const nextweek = () => {\n  var today = new Date();\n  var nextweek = new Date(today.getFullYear(), today.getMonth(), today.getDate()+7);\n  return nextweek;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TodoGrouped.html":{"url":"classes/TodoGrouped.html","title":"class - TodoGrouped","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TodoGrouped\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/todo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                group1\n                            \n                            \n                                group2\n                            \n                            \n                                ourHome\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: Todo[])\n                    \n                \n                        \n                            \n                                Defined in src/app/models/todo.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Todo[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        group1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ourHome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/todo.ts:33\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterData\n                        \n                    \n                \n            \n            \n                \nfilterData(data: Todo[], id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/todo.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Todo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Todo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Todo {\n    title: string | null = null;\n    priority: number | null = null;\n    group:number | null = null;\n    description:string | null = null;\n    date:Date | null = null;\n    isCompleted:boolean | null = null;\n    isDeleted:boolean | null = null;\n}\n\n/* Todo Filter */\nexport class TodoFilter {\n    search: string  = '';\n    group:number | null = null;\n    groupId:string | null = null;\n    date:Date | null = null;\n    isDeleted : boolean | null = null;\n    isCompleted : boolean | null = null;\n    dateRange : DateRange = new DateRange()\n\n}\n/* Date Range */\nexport class DateRange {\nfirstDate:Date | null = null;\nlastDate:Date | null = null;\n}\n\n/* Todo Grouped */\nexport class TodoGrouped {\n      group1 : Todo[] = [];\n      group2 : Todo[] = [];\n      ourHome : Todo[] = [];\n      constructor(data?:Todo[]) {\n        if(data && data.length) {\n          this.group1 = this.filterData(data,groupEnum.group1);\n          this.group2 = this.filterData(data,groupEnum.group2);\n          this.ourHome = this.filterData(data,groupEnum.ourHome);\n        }\n      }\n        filterData(data:Todo[], id: number):Todo[] {\n          return data.filter((el:Todo) => el.group == id)\n        }\n}\n\n\nexport const groupEnum : any = {\n  group1 : 1,\n  group2 : 2,\n  ourHome : 3\n}\n\nexport const getKeyByvalue =  (obj:any,val:any):any => {\n     return Object.keys(obj).find(key => obj[key] === val) || ''\n}\n\n/* Group Enums */\nexport const groupEnumName : any = {\n    group1 : 'Group 1',\n    group2 : 'Group 2',\n    ourHome : 'Our Home ToDos'\n}\n\n\n\n/* Get Date */\nexport const nextweek = () => {\n  var today = new Date();\n  var nextweek = new Date(today.getFullYear(), today.getMonth(), today.getDate()+7);\n  return nextweek;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoService.html":{"url":"injectables/TodoService.html","title":"injectable - TodoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TodoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/todo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _todos\n                            \n                            \n                                groupData\n                            \n                            \n                                pageTitle$\n                            \n                            \n                                    Readonly\n                                todos$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNew\n                            \n                            \n                                editVal\n                            \n                            \n                                findByName\n                            \n                            \n                                getAllTodos\n                            \n                            \n                                getAllTodosList\n                            \n                            \n                                patchField\n                            \n                            \n                                saveAll\n                            \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    todos\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(datePipe: DatePipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/todo.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datePipe\n                                                  \n                                                        \n                                                                        DatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNew\n                        \n                    \n                \n            \n            \n                \naddNew(data: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editVal\n                        \n                    \n                \n            \n            \n                \neditVal(obj: any, key: string, val: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByName\n                        \n                    \n                \n            \n            \n                \nfindByName(name: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTodos\n                        \n                    \n                \n            \n            \n                \ngetAllTodos(filterObj?: TodoFilter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterObj\n                                    \n                                                TodoFilter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTodosList\n                        \n                    \n                \n            \n            \n                \ngetAllTodosList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchField\n                        \n                    \n                \n            \n            \n                \npatchField(data: Todo[], key: string, val: any, filter: TodoFilter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Todo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                TodoFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveAll\n                        \n                    \n                \n            \n            \n                \nsaveAll(data: Todo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Todo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _todos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(new TodoGrouped([]))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/todo.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: 'Group 1',\n      id:1\n    },\n    {\n      name: 'Group 2',\n      id:2\n    },\n    {\n      name: 'Our Home ToDos',\n      id:3\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/services/todo.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageTitle$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/todo.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        todos$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._todos.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/todo.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        todos\n                    \n                \n\n                \n                    \n                        gettodos()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/todo.service.ts:33\n                                \n                            \n\n                \n                    \n                        settodos(val: TodoGrouped)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/todo.service.ts:37\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            TodoGrouped\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Todo, TodoFilter, TodoGrouped } from './../models/todo';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { DatePipe } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\n\nexport class TodoService {\n\n  /* Groups Array */\n  groupData: any[] = [\n    {\n      name: 'Group 1',\n      id:1\n    },\n    {\n      name: 'Group 2',\n      id:2\n    },\n    {\n      name: 'Our Home ToDos',\n      id:3\n    },\n  ];\n\n  private readonly _todos = new BehaviorSubject(new TodoGrouped([]));\n  readonly todos$ = this._todos.asObservable();\n  private get todos() : TodoGrouped {\n  return this._todos.getValue()\n  }\n\n  private set todos(val:TodoGrouped) {\n  this._todos.next(val)\n  }\n   pageTitle$ = new BehaviorSubject('');\n\n  constructor(private datePipe: DatePipe) { }\n\n/* Get All Data Method */\n  getAllTodos(filterObj?:TodoFilter) {\n    const todoList = JSON.parse(localStorage.getItem('todosDB') || '[]');\n    // console.log('date', this.datePipe.transform(new Date(), 'yyyy-MM-dd'))\n    if(filterObj) {\n      console.log('filter ', filterObj)\n      let filteredItems = todoList.filter((el: any) => {\n          return (\n            (filterObj.search  ? el.title.toLocaleLowerCase().indexOf(filterObj.search.toLocaleLowerCase()) > -1 : true) &&\n            (filterObj.group  ? el.group == filterObj.group : true) &&\n            (filterObj.dateRange && filterObj.dateRange.firstDate && filterObj.dateRange.lastDate  ? new Date(el.date).getTime()  filterObj.dateRange.firstDate.getTime()  : true) &&\n            (filterObj.isDeleted  ? el.isDeleted : !el.isDeleted) &&\n            (filterObj.isCompleted  ? el.isCompleted : true) &&\n            (filterObj.groupId  ? el.group == filterObj.groupId : true) &&\n            (filterObj.date ? this.datePipe.transform(filterObj.date, 'yyyy-MM-dd')  == this.datePipe.transform(el.date, 'yyyy-MM-dd'):true)\n      )});\n      this.todos = new TodoGrouped(filteredItems);\n\n    } else {\n      this.todos = new TodoGrouped(todoList);\n    }\n  }\n\n  /* Get Data From Localstorage */\n  getAllTodosList() {\n      return JSON.parse(localStorage.getItem('todosDB') || '[]');\n  }\n\n  /* Save All Data To List */\n  saveAll(data:Todo[]) {\n    localStorage.setItem('todosDB', JSON.stringify(data))\n  }\n\n  /* Adding New Data Method */\n  addNew(data:Todo) {\n    const todoList : Todo[] = JSON.parse(localStorage.getItem('todosDB') || '[]');\n    todoList.push(data);\n    this.saveAll(todoList)\n  }\n/* Patch Field */\n  patchField(data:Todo[], key:string,val:any, filter: TodoFilter) {\n    let allData:Todo[] = this.getAllTodosList()\n    allData.map((el:Todo) => {\n      data.map((elx:Todo) => {elx.title === el.title && (this.editVal(el,key, val) )});\n    })\n    this.saveAll(allData)\n    this.getAllTodos(filter);\n  }\n  /* Find By Name */\n  findByName(name:any) : any{\n    let allData:Todo[] = this.getAllTodosList()\n    return allData.filter((el:Todo) => el.title === name)?.length ? allData.filter((el:Todo) => el.title === name)[0] : null;\n  }\n\n  editVal(obj:any, key:string, val:any) {\n    return obj[key] = val\n  }\n\n /*   formatDate(date: any) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-new-task/add-new-task.component.ts\n            \n            component\n            AddNewTaskComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/materials/materials.module.ts\n            \n            variable\n            materialComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/todo.ts\n            \n            class\n            DateRange\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/todo.ts\n            \n            class\n            Todo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/todo.ts\n            \n            class\n            TodoFilter\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/todo.ts\n            \n            class\n            TodoGrouped\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/todo.ts\n            \n            variable\n            getKeyByvalue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/todo.ts\n            \n            variable\n            groupEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/todo.ts\n            \n            variable\n            groupEnumName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/todo.ts\n            \n            variable\n            nextweek\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/todo.service.ts\n            \n            injectable\n            TodoService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/task-details/task-details.component.ts\n            \n            component\n            TaskDetailsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tasks-list/tasks-list.component.ts\n            \n            component\n            TasksListComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/cdk : ^12.2.1\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/material : ^12.2.1\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            @fortawesome/angular-fontawesome : ^0.9.0\n        \n            @fortawesome/fontawesome-free : ^5.15.4\n        \n            bootstrap : ^5.1.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nToDoList\nThis project was generated with Angular CLI version 12.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAddNewTaskComponent\n\nAddNewTaskComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddNewTaskComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nTaskDetailsComponent\n\nTaskDetailsComponent\n\nAppModule -->\n\nTaskDetailsComponent->AppModule\n\n\n\n\n\nTasksListComponent\n\nTasksListComponent\n\nAppModule -->\n\nTasksListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialsModule\n\nMaterialsModule\n\nAppModule -->\n\nMaterialsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            getKeyByvalue   (src/.../todo.ts)\n                        \n                        \n                            groupEnum   (src/.../todo.ts)\n                        \n                        \n                            groupEnumName   (src/.../todo.ts)\n                        \n                        \n                            materialComponent   (src/.../materials.module.ts)\n                        \n                        \n                            nextweek   (src/.../todo.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/models/todo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getKeyByvalue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (obj:any,val:any):any => {\n     return Object.keys(obj).find(key => obj[key] === val) || ''\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  group1 : 1,\n  group2 : 2,\n  ourHome : 3\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupEnumName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    group1 : 'Group 1',\n    group2 : 'Group 2',\n    ourHome : 'Our Home ToDos'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextweek\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  var today = new Date();\n  var nextweek = new Date(today.getFullYear(), today.getMonth(), today.getDate()+7);\n  return nextweek;\n}\n                    \n                \n\n\n        \n    \n\n    src/app/materials/materials.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        materialComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  MatButtonModule,\n  MatDividerModule,\n  MatIconModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatSelectModule,\n  MatCheckboxModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatInputModule,\n  MatRadioModule,\n  MatCardModule,\n  MatExpansionModule\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
